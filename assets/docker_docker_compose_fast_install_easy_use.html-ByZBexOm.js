import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,e,o as a}from"./app-CzakNbIb.js";const l={};function d(p,s){return a(),n("div",null,s[0]||(s[0]=[e(`<blockquote><p>本篇将使用 DaoCloud 源在 Ubuntu 上简单快速安装 docker 及 docker-compose</p></blockquote><blockquote><p>并添加了通过 Dockerfile 及 docker-compose.yml 使用 nginx 的示例</p></blockquote><blockquote><p>本篇文章所用系统信息如下</p></blockquote><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>Distributor ID: Ubuntu</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Description:    Ubuntu 16.04.1 LTS</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Release:        16.04</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Codename:       xenial</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="docker-的安装及使用" tabindex="-1"><a class="header-anchor" href="#docker-的安装及使用"><span>docker 的安装及使用</span></a></h2><h3 id="简单介绍" tabindex="-1"><a class="header-anchor" href="#简单介绍"><span>简单介绍</span></a></h3><blockquote><p>docker 是一个开源的软件部署解决方案</p></blockquote><blockquote><p>docker 也是轻量级的应用容器框架</p></blockquote><blockquote><p>docker 可以打包、发布、运行任何的应用</p></blockquote><h3 id="安装" tabindex="-1"><a class="header-anchor" href="#安装"><span>安装</span></a></h3><ul><li>阿里云</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>daocloud</li></ul><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> curl</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -sSL</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://get.daocloud.io/docker</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sh</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>安装后将会自动重启</p><h3 id="卸载" tabindex="-1"><a class="header-anchor" href="#卸载"><span>卸载</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>sudo apt-get remove docker docker-engine</span></span>
<span class="line"><span></span></span>
<span class="line"><span>rm -fr /var/lib/docker/</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="配置加速器" tabindex="-1"><a class="header-anchor" href="#配置加速器"><span>配置加速器</span></a></h3><p>下面是我的配置，实际使用需要根据自己的账号去查看自己的地址</p><ul><li><a href="https://www.daocloud.io/mirror#accelerator-doc" target="_blank" rel="noopener noreferrer">DaoCloud</a></li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>curl -sSL https://get.daocloud.io/daotools/set_mirror.sh | sh -s http://ced808ab.m.daocloud.io</span></span>
<span class="line"><span></span></span>
<span class="line"><span>sudo systemctl restart docker.service</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><a href="https://cr.console.aliyun.com/cn-hangzhou/mirrors" target="_blank" rel="noopener noreferrer">阿里云</a></li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>sudo mkdir -p /etc/docker</span></span>
<span class="line"><span></span></span>
<span class="line"><span>sudo tee /etc/docker/daemon.json &lt;&lt;-&#39;EOF&#39;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>{</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  &quot;registry-mirrors&quot;: [&quot;https://dist7hw1.mirror.aliyuncs.com&quot;]</span></span>
<span class="line"><span></span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>EOF</span></span>
<span class="line"><span></span></span>
<span class="line"><span>sudo systemctl daemon-reload</span></span>
<span class="line"><span></span></span>
<span class="line"><span>sudo systemctl restart docker</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="基础命令" tabindex="-1"><a class="header-anchor" href="#基础命令"><span>基础命令</span></a></h3><ul><li><p>查看版本:<code>docker -v</code> //文章使用版本：Docker version 18.06.0-ce, build 0ffa825</p></li><li><p>查看镜像：<code>docker images</code></p></li><li><p>查看容器：<code>docker ps</code></p></li><li><p>启动 docker 服务：<code>sudo service docker start</code></p></li><li><p>停止 docker 服务：<code>sudo service docker stop</code></p></li><li><p>重启 docker 服务：<code>sudo service docker restart</code></p></li><li><p>进入一个运行中的容器：<code> docker exec -it 容器Id /bin/bash</code></p></li></ul><h3 id="通过-dockerfile-使用-nginx" tabindex="-1"><a class="header-anchor" href="#通过-dockerfile-使用-nginx"><span>通过 Dockerfile 使用 nginx</span></a></h3><p>通过下面的一个脚本可以简单快速的创建一个镜像并运行起来</p><p>大概看下应该就可以大概明白镜像的基本使用了</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">echo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;0.创建测试目录及代码&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">mkdir</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> dockerfiletest</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> dockerfiletest</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">mkdir</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> dist</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">echo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;hello world&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">./dist/index.html</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">echo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;1.创建Dockerfile&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">echo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">From daocloud.io/library/nginx:1.13.0-alpine</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">COPY dist/ /usr/share/nginx/html/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">./Dockerfile</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">echo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;2.构建镜像&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> build</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -t</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> dockerfiletest</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> .</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">echo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;3.运行镜像&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 3344:80</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> dockerfiletest</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>下面分步拆解下</p><h4 id="_1-在项目目录中添加-dockerfile-文件" tabindex="-1"><a class="header-anchor" href="#_1-在项目目录中添加-dockerfile-文件"><span>1.在项目目录中添加 Dockerfile 文件</span></a></h4><p>详细请参考：https://hub.daocloud.io/repos/2b7310fb-1a50-48f2-9586-44622a2d1771</p><p>html 的简单部署</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">From</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> daocloud.io/library/nginx:1.13.0-alpine</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 将发布目录的文件拷贝到镜像中</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">COPY</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> dist/</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/share/nginx/html/</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>若要使用自己的配置脚本，比如 vue 的配置,可以将自己的配置文件复制到容器中</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">From</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> daocloud.io/library/nginx:1.13.0-alpine</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 删除镜像中 nginx 的默认配置</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">RUN</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /etc/nginx/conf.d/default.conf</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 复制 default.conf 到镜像中</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ADD</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> default.conf</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /etc/nginx/conf.d/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 将发布目录的文件拷贝到镜像中</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">COPY</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> dist/</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/share/nginx/html/</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>nginx 中 vue history 模式的配置 如下，可参考</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>server {</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    listen       80;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    location / {</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        root /usr/share/nginx/html/;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        index index.html;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        try_files $uri $uri/ /index.html;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><s>若是将<code>/usr/share/nginx/html/</code>和<code>/etc/nginx/conf.d/</code>挂载到本地，这样应该能够灵活使用 docker 安装的 nginx 了(未实践过)</s></p><h4 id="_2-构建镜像" tabindex="-1"><a class="header-anchor" href="#_2-构建镜像"><span>2.构建镜像</span></a></h4><p>构建参数说明参考：http://www.runoob.com/docker/docker-build-command.html</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>docker build -t docker-nginx-test .</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-运行镜像" tabindex="-1"><a class="header-anchor" href="#_3-运行镜像"><span>3.运行镜像</span></a></h4><p>--name 服务名</p><p>-d 后台运行</p><p>-p 暴露端口:nginx 端口</p><p>docker-nginx-test 镜像名/IMAGE ID</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>docker run --name dockertest -d -p 4455:80 docker-nginx-test</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-测试访问" tabindex="-1"><a class="header-anchor" href="#_4-测试访问"><span>4.测试访问</span></a></h4><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>root@ubuntu:~# curl http://localhost:4455</span></span>
<span class="line"><span></span></span>
<span class="line"><span>hello world</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>现在，可以通过 IP+端口的形式在外网访问站点了，但在实际使用肯定还需要绑定域名等一些操作</p></blockquote><blockquote><p>最简单的是我认为是使用 nginx 去做代理</p></blockquote><blockquote><p>目前我们公司使用的 <a href="https://traefik.io/" target="_blank" rel="noopener noreferrer">traefik</a> ，最爽的莫过于 https 的支持，可以了解一下</p></blockquote><h2 id="docker-compose-的安装及使用" tabindex="-1"><a class="header-anchor" href="#docker-compose-的安装及使用"><span>docker-compose 的安装及使用</span></a></h2><h3 id="简单介绍-1" tabindex="-1"><a class="header-anchor" href="#简单介绍-1"><span>简单介绍</span></a></h3><blockquote><p>Docker Compose 是一个用来定义和运行复杂应用的 Docker 工具。</p></blockquote><blockquote><p>使用 Docker Compose 不再需要使用 shell 脚本来启动容器。(通过 docker-compose.yml 配置)</p></blockquote><h3 id="安装-1" tabindex="-1"><a class="header-anchor" href="#安装-1"><span>安装</span></a></h3><p>可以通过修改 URL 中的版本，自定义您需要的版本。</p><ul><li>Github源</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>sudo curl -L https://github.com/docker/compose/releases/download/1.22.0/docker-compose-\`uname -s\`-\`uname -m\` -o /usr/local/bin/docker-compose</span></span>
<span class="line"><span></span></span>
<span class="line"><span>sudo chmod +x /usr/local/bin/docker-compose</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Daocloud镜像</li></ul><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">curl</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -L</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://get.daocloud.io/docker/compose/releases/download/1.22.0/docker-compose-\`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">uname</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -s</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">-</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">uname</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -m</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\`</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &gt; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">/usr/local/bin/docker-compose</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">chmod</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> +x</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/local/bin/docker-compose</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="卸载-1" tabindex="-1"><a class="header-anchor" href="#卸载-1"><span>卸载</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>sudo rm /usr/local/bin/docker-compose</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="基础命令-1" tabindex="-1"><a class="header-anchor" href="#基础命令-1"><span>基础命令</span></a></h3><p>需要在 docker-compose.yml 所在文件夹中执行命令</p><p>使用 docker-compose 部署项目的简单步骤</p><ul><li><p>停止现有 docker-compose 中的容器：<code>docker-compose down</code></p></li><li><p>重新拉取镜像：<code>docker-compose pull</code></p></li><li><p>后台启动 docker-compose 中的容器：<code>docker-compose up -d</code></p></li></ul><h3 id="通过-docker-compose-yml-部署应用" tabindex="-1"><a class="header-anchor" href="#通过-docker-compose-yml-部署应用"><span>通过 docker-compose.yml 部署应用</span></a></h3><p>我将上面所创建的镜像推送到了阿里云，在此使用它</p><h4 id="_1-新建-docker-compose-yml-文件" tabindex="-1"><a class="header-anchor" href="#_1-新建-docker-compose-yml-文件"><span>1.新建 docker-compose.yml 文件</span></a></h4><p>通过以下配置，在运行后可以创建两个站点(只为演示)</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>version: &quot;3&quot;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>services:</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  web1:</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    image: registry.cn-hangzhou.aliyuncs.com/yimo_public/docker-nginx-test:latest</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    ports:</span></span>
<span class="line"><span></span></span>
<span class="line"><span>      - &quot;4466:80&quot;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  web2:</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    image: registry.cn-hangzhou.aliyuncs.com/yimo_public/docker-nginx-test:latest</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    ports:</span></span>
<span class="line"><span></span></span>
<span class="line"><span>      - &quot;4477:80&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此处只是简单演示写法，说明 docker-compose 的方便</p><h4 id="_2-构建完成-后台运行镜像" tabindex="-1"><a class="header-anchor" href="#_2-构建完成-后台运行镜像"><span>2.构建完成，后台运行镜像</span></a></h4><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>docker-compose up -d</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>运行后就可以使用 ip+port 访问这两个站点了</p><h4 id="_3-镜像更新重新部署" tabindex="-1"><a class="header-anchor" href="#_3-镜像更新重新部署"><span>3.镜像更新重新部署</span></a></h4><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>docker-compose down</span></span>
<span class="line"><span></span></span>
<span class="line"><span>docker-compose pull</span></span>
<span class="line"><span></span></span>
<span class="line"><span>docker-compose up -d</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="相关文章" tabindex="-1"><a class="header-anchor" href="#相关文章"><span>相关文章</span></a></h2><ul><li><p>docker 文档：https://docs.docker.com/get-started/</p></li><li><p>docker-compose 文档:https://docs.docker.com/compose/install/#uninstallation</p></li><li><p>docker-compose 仓库：https://github.com/docker/compose</p></li><li><p>daocloud 源地址 :https://get.daocloud.io/#install-docker</p></li><li><p>Docker 通过 Nginx 镜像部署 Vue 项目：https://blog.csdn.net/jason_jeson/article/details/78200623</p></li><li><p>DaoClould https://hub.daocloud.io/repos/2b7310fb-1a50-48f2-9586-44622a2d1771</p></li></ul>`,82)]))}const t=i(l,[["render",d],["__file","docker_docker_compose_fast_install_easy_use.html.vue"]]),o=JSON.parse('{"path":"/posts/docker/docker_docker_compose_fast_install_easy_use.html","title":"docker 及 docker-compose 的快速安装和简单使用","lang":"zh-CN","frontmatter":{"title":"docker 及 docker-compose 的快速安装和简单使用","date":"2018-08-20T09:33:00.000Z","category":["Docker"],"tag":["docker","docker-compose"],"description":"本篇将使用 DaoCloud 源在 Ubuntu 上简单快速安装 docker 及 docker-compose 并添加了通过 Dockerfile 及 docker-compose.yml 使用 nginx 的示例 本篇文章所用系统信息如下 docker 的安装及使用 简单介绍 docker 是一个开源的软件部署解决方案 docker 也是轻量级的应...","head":[["meta",{"property":"og:url","content":"https://www.yimo.link/posts/docker/docker_docker_compose_fast_install_easy_use.html"}],["meta",{"property":"og:site_name","content":"易墨网"}],["meta",{"property":"og:title","content":"docker 及 docker-compose 的快速安装和简单使用"}],["meta",{"property":"og:description","content":"本篇将使用 DaoCloud 源在 Ubuntu 上简单快速安装 docker 及 docker-compose 并添加了通过 Dockerfile 及 docker-compose.yml 使用 nginx 的示例 本篇文章所用系统信息如下 docker 的安装及使用 简单介绍 docker 是一个开源的软件部署解决方案 docker 也是轻量级的应..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-28T11:15:42.000Z"}],["meta",{"property":"article:tag","content":"docker"}],["meta",{"property":"article:tag","content":"docker-compose"}],["meta",{"property":"article:published_time","content":"2018-08-20T09:33:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-10-28T11:15:42.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"docker 及 docker-compose 的快速安装和简单使用\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2018-08-20T09:33:00.000Z\\",\\"dateModified\\":\\"2024-10-28T11:15:42.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"易墨\\",\\"url\\":\\"https://www.yimo.link\\"}]}"]]},"headers":[{"level":2,"title":"docker 的安装及使用","slug":"docker-的安装及使用","link":"#docker-的安装及使用","children":[{"level":3,"title":"简单介绍","slug":"简单介绍","link":"#简单介绍","children":[]},{"level":3,"title":"安装","slug":"安装","link":"#安装","children":[]},{"level":3,"title":"卸载","slug":"卸载","link":"#卸载","children":[]},{"level":3,"title":"配置加速器","slug":"配置加速器","link":"#配置加速器","children":[]},{"level":3,"title":"基础命令","slug":"基础命令","link":"#基础命令","children":[]},{"level":3,"title":"通过 Dockerfile 使用 nginx","slug":"通过-dockerfile-使用-nginx","link":"#通过-dockerfile-使用-nginx","children":[{"level":4,"title":"1.在项目目录中添加 Dockerfile 文件","slug":"_1-在项目目录中添加-dockerfile-文件","link":"#_1-在项目目录中添加-dockerfile-文件","children":[]},{"level":4,"title":"2.构建镜像","slug":"_2-构建镜像","link":"#_2-构建镜像","children":[]},{"level":4,"title":"3.运行镜像","slug":"_3-运行镜像","link":"#_3-运行镜像","children":[]},{"level":4,"title":"4.测试访问","slug":"_4-测试访问","link":"#_4-测试访问","children":[]}]}]},{"level":2,"title":"docker-compose 的安装及使用","slug":"docker-compose-的安装及使用","link":"#docker-compose-的安装及使用","children":[{"level":3,"title":"简单介绍","slug":"简单介绍-1","link":"#简单介绍-1","children":[]},{"level":3,"title":"安装","slug":"安装-1","link":"#安装-1","children":[]},{"level":3,"title":"卸载","slug":"卸载-1","link":"#卸载-1","children":[]},{"level":3,"title":"基础命令","slug":"基础命令-1","link":"#基础命令-1","children":[]},{"level":3,"title":"通过 docker-compose.yml 部署应用","slug":"通过-docker-compose-yml-部署应用","link":"#通过-docker-compose-yml-部署应用","children":[{"level":4,"title":"1.新建 docker-compose.yml 文件","slug":"_1-新建-docker-compose-yml-文件","link":"#_1-新建-docker-compose-yml-文件","children":[]},{"level":4,"title":"2.构建完成，后台运行镜像","slug":"_2-构建完成-后台运行镜像","link":"#_2-构建完成-后台运行镜像","children":[]},{"level":4,"title":"3.镜像更新重新部署","slug":"_3-镜像更新重新部署","link":"#_3-镜像更新重新部署","children":[]}]}]},{"level":2,"title":"相关文章","slug":"相关文章","link":"#相关文章","children":[]}],"git":{"createdTime":1730114142000,"updatedTime":1730114142000,"contributors":[{"name":"yimo","email":"yimo@wikiglobal.com","commits":1}]},"readingTime":{"minutes":4,"words":1200},"filePathRelative":"posts/docker/docker_docker_compose_fast_install_easy_use.md","localizedDate":"2018年8月20日","excerpt":"<blockquote>\\n<p>本篇将使用 DaoCloud 源在 Ubuntu 上简单快速安装 docker 及 docker-compose</p>\\n</blockquote>\\n<blockquote>\\n<p>并添加了通过 Dockerfile 及 docker-compose.yml 使用 nginx 的示例</p>\\n</blockquote>\\n<blockquote>\\n<p>本篇文章所用系统信息如下</p>\\n</blockquote>\\n<div class=\\"language- line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"\\" data-title=\\"\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span>Distributor ID: Ubuntu</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span>Description:    Ubuntu 16.04.1 LTS</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span>Release:        16.04</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span>Codename:       xenial</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{t as comp,o as data};
