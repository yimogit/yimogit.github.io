import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,e,o as i}from"./app-BHZ56IUu.js";const l="/assets/662652-20231206233226148-9931-AvxiYYHQ.png",p="/assets/662652-20231206233226264-260127102-Dn0R289I.png",r="/assets/662652-20231206233226200-1982732548-CYjnPZ5Z.png",t="/assets/662652-20231206233226178-953874498-C78yowAe.png",d="/assets/662652-20231206233226384-1085445792-BFwiiyxT.png",c="/assets/662652-20231206233226384-975081172-ua7tEwlq.png",o="/assets/662652-20231206233226233-240129930-C5MLdZ5I.png",u="/assets/662652-20231206233226218-2088451690-B09JHaUW.png",m="/assets/662652-20231206233226227-1936114631-v2ZiQBe0.png",v="/assets/662652-20231206233226177-751499377-BiMLDSqI.png",g="/assets/662652-20231206233226283-1448019694-BQXVEWi8.png",h="/assets/662652-20231206233226492-814156810-oKp__LZu.png",b="/assets/662652-20231206233226482-317795304-BTTcofd4.png",f="/assets/662652-20231206233226392-530739934-irDLfUuA.png",_="/assets/662652-20231206233226466-500555965-BH9LbjnT.png",k="/assets/662652-20231206233213629-611425215-yysd7dhg.png",x="/assets/662652-20231206233226438-236974707-BYUPECnj.png",y="/assets/662652-20231206233226253-134620872-_RyvHcvm.png",A="/assets/662652-20231206233227258-534608648-Clv0nH1_.png",w="/assets/662652-20231206233226586-292447382-D-UDN9Ct.png",q="/assets/662652-20231206233226497-1072163184-nIZ3iNA3.png",F="/assets/662652-20231206233226485-1973815573-LiD3589k.png",P="/assets/662652-20231206233226546-786889192-Dlxm80mf.png",z="/assets/662652-20231206233226491-783573140-B7zneVP0.png",D="/assets/662652-20231206233226441-101574175-CSS_Ta5h.png",G="/assets/662652-20231206233226435-595558435-CtHYTID6.png",S="/assets/662652-20231206233226447-1468281611-Juk72ANb.png",E="/assets/662652-20231206233226238-696034576-BF15Ve49.png",C="/assets/662652-20231206233226396-230392120-BVIbJdRD.png",I="/assets/662652-20231206233226201-1050828575-Cu_xRvVq.png",R="/assets/662652-20231206233226299-1899152957-BjQ9UWzP.png",N="/assets/662652-20231206233226314-1965041747-CKNfFs5T.png",B="/assets/662652-20231206233226323-1280685302-BwfvjMq-.png",T="/assets/662652-20231206233226437-399382414-BXuvzf-U.png",L="/assets/662652-20231206233226484-1018189335-CbwpwQeE.png",O="/assets/662652-20231206233226383-688266648-C872BBu-.png",M="/assets/662652-20231206233226294-689292347-ymL9-6G5.png",H="/assets/662652-20231206233226437-1447586003-CCltERDc.png",j="/assets/662652-20231206233226410-2128743457-DCGifhtU.png",U="/assets/662652-20231206233226520-890573277-yn1E2yc0.png",Q="/assets/662652-20231206233226433-411953224-BIFaKMDL.png",X="/assets/662652-20231206233226393-240303426-BgTuNV4q.png",V="/assets/662652-20231206233226468-1277128856-B8Il46ir.png",W="/assets/662652-20231206233226333-1635440016-DOQkU7Vb.png",Y="/assets/662652-20231206233231818-121286532-cR_Y4C8T.png",Z="/assets/662652-20231206233226344-831174305-Bt2dNZHQ.png",J="/assets/662652-20231206233226330-1365622953-CES6RgEf.png",$="/assets/662652-20231206233226618-1530116535-D1fu1a6g.png",K="/assets/662652-20231206233226436-1753116062-CJ5lbVSM.png",ss="/assets/662652-20231206233226229-1785768870-MUIsJDqm.png",ns="/assets/662652-20231206233226206-118653320-B2WirUu-.png",as="/assets/662652-20231206233226483-2006820807-CblvBZ_d.png",es="/assets/662652-20231206233226459-728413375-BSRc7qyD.png",is="/assets/662652-20231206233226490-186790263-DlJJU7tc.png",ls="/assets/662652-20231206233226438-1967425612-PILmFdPO.png",ps="/assets/662652-20231206233226698-1617675376-DIy6-KUf.png",rs="/assets/662652-20231206233226407-1313587803-CtnIde1P.png",ts="/assets/662652-20231206233226414-869838363-Csycc_Bu.png",ds="/assets/662652-20231206233226247-917285796-B1vA1W9N.png",cs="/assets/662652-20231206233226489-1734726978-DSy-uA00.png",os="/assets/662652-20231206233226319-27611562-C77JZx8X.png",us="/assets/662652-20231206233226526-1245923494-CEwnVhxn.png",ms="/assets/662652-20231206233226270-117718140-CFJthNXe.png",vs="/assets/662652-20231206233226228-1083035483-C16J_59b.png",gs="/assets/662652-20231206233226214-390549570-BG6O3JAr.png",hs="/assets/662652-20231206233226339-522134688-CubHfxFA.png",bs="/assets/662652-20231206233226277-2068193750-3bg0VUVm.png",fs="/assets/662652-20231206233226436-1483621793-BYlpWLY7.png",_s="/assets/662652-20231206233226433-835350090-CQopj3ZF.png",ks="/assets/662652-20231206233226428-1755540104-Dbt-taAW.png",xs="/assets/662652-20231206233226325-1620047022-CdA_APlW.png",ys="/assets/662652-20231206233226467-1565062763-CFNcu6rs.png",As="/assets/662652-20231206233226148-9931-AvxiYYHQ.png",ws="/assets/662652-20231206233226264-260127102-Dn0R289I.png",qs={};function Fs(Ps,s){return i(),a("div",null,s[0]||(s[0]=[e(`<h2 id="前言" tabindex="-1"><a class="header-anchor" href="#前言"><span>前言</span></a></h2><blockquote><p>Prometheus 是一个开放性的监控解决方案，通过各种 Exporter 采集当前主机/服务的数据，和 Grafana 相结合可以实现强大的监控和可视化功能</p><p>本篇将分享使用 docker compose 构建 Prometheus+Grafana，并监控之前文章所搭建的主机&amp;服务，分享日常使用的一些使用经验 文章较长，已安装可略过，推荐先看第三节 <a href="https://www.cnblogs.com/morang/p/devops-prometheus-grafana-install-use-db-site-monitor.html#%E5%B8%B8%E7%94%A8%E6%9C%8D%E5%8A%A1%E7%9A%84-prometheusgrafana-%E9%85%8D%E7%BD%AE" target="_blank" rel="noopener noreferrer">常用服务的 Prometheus+Grafana 配置</a></p></blockquote><h3 id="特点" tabindex="-1"><a class="header-anchor" href="#特点"><span>特点</span></a></h3><ul><li>成熟稳定且强大</li><li>丰富的插件，大部分情况都能满足</li><li>轻量级部署，资源占用少</li></ul><h3 id="使用情况" tabindex="-1"><a class="header-anchor" href="#使用情况"><span>使用情况</span></a></h3><ul><li>主要用来作为监控面板使用</li><li>使用 Grafana 监控：linux ，windows，redis，clickhouse，mongodb，mysql， RabbitMQ，站点情况</li><li>使用 Grafana 设置告警当服务出现无法访问时通知到企业微信群</li><li>Grafana 版本问题，可能存在面板失效，需要做一些调整</li></ul><h2 id="使用-docker-compose-安装-prometheus" tabindex="-1"><a class="header-anchor" href="#使用-docker-compose-安装-prometheus"><span>使用 docker compose 安装 Prometheus</span></a></h2><h3 id="配置文件说明" tabindex="-1"><a class="header-anchor" href="#配置文件说明"><span>配置文件说明</span></a></h3><ul><li><p>prometheus 版本：v2.47.2</p></li><li><p>指定运行参数：</p><ul><li>启动配置文件路径：<code>&#39;--config.file=/etc/prometheus/prometheus.yml&#39;</code></li><li>数据存储目录：<code>&#39;--storage.tsdb.path=/prometheus&#39;</code></li><li>数据保留时间：<code>&#39;--storage.tsdb.retention.time=30d&#39;</code></li><li>允许使用 <code> curl -X POST \`\`http://localhost:9090/-/reload</code> 重载其配置：<code>&#39;--web.enable-lifecycle&#39;</code></li><li>指定 web 控制台配置，添加了账号密码：<code>&#39;--web.config.file=/etc/prometheus/web-config.yml&#39;</code></li></ul></li><li><p>开放端口：9090</p></li><li><p>指定网络：devopsnetwork （<code>docker network create devopsnetwork</code>）</p></li><li><p>挂载配置文件及数据目录，需要对数据目录进行创建及赋予权限：<code>mkdir prometheus_data &amp;&amp; chown 65534 ./prometheus_data</code> <a href="https://github.com/prometheus/prometheus/pull/8747" target="_blank" rel="noopener noreferrer">关于持久化权限的讨论</a></p></li><li><p>用到了三个配置文件：compose.yml prometheus.yml web-config.yml</p></li><li><p>docker compose 文件：compose.yml</p></li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>version: &#39;3.1&#39;</span></span>
<span class="line"><span>services:</span></span>
<span class="line"><span>  prometheus:</span></span>
<span class="line"><span>    restart: always</span></span>
<span class="line"><span>    container_name: prometheus</span></span>
<span class="line"><span>    image: prom/prometheus:v2.47.2</span></span>
<span class="line"><span>    command:</span></span>
<span class="line"><span>      # 配置文件</span></span>
<span class="line"><span>      - &#39;--config.file=/etc/prometheus/prometheus.yml&#39;</span></span>
<span class="line"><span>      # 指定web面板账号密码访问</span></span>
<span class="line"><span>      - &#39;--web.config.file=/etc/prometheus/web-config.yml&#39;</span></span>
<span class="line"><span>      # 数据目录</span></span>
<span class="line"><span>      - &#39;--storage.tsdb.path=/prometheus&#39;</span></span>
<span class="line"><span>      # 数据保留时间</span></span>
<span class="line"><span>      - &#39;--storage.tsdb.retention.time=30d&#39;</span></span>
<span class="line"><span>      # 运行使用 curl -X POST http://localhost:9090/-/reload  重载其配置</span></span>
<span class="line"><span>      - &#39;--web.enable-lifecycle&#39;</span></span>
<span class="line"><span>    volumes:</span></span>
<span class="line"><span>      # 需要权限 mkdir prometheus_data &amp;&amp; chown 65534 ./prometheus_data</span></span>
<span class="line"><span>      - ./prometheus.yml:/etc/prometheus/prometheus.yml</span></span>
<span class="line"><span>      - ./prometheus_data:/prometheus</span></span>
<span class="line"><span>      - ./web-config.yml:/etc/prometheus/web-config.yml</span></span>
<span class="line"><span>    ports:</span></span>
<span class="line"><span>      - 9090:9090</span></span>
<span class="line"><span>    networks:</span></span>
<span class="line"><span>      - devopsnetwork</span></span>
<span class="line"><span>      </span></span>
<span class="line"><span>networks:</span></span>
<span class="line"><span>  devopsnetwork:</span></span>
<span class="line"><span>    external: true</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>prometheus 配置文件示例：prometheus.yml，</p><ul><li>指定了 prometheus ，并设置了访问密码 root devops666</li></ul></li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>global:</span></span>
<span class="line"><span>  scrape_interval:     15s # By default, scrape targets every 15 seconds.</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  # Attach these labels to any time series or alerts when communicating with</span></span>
<span class="line"><span>  # external systems (federation, remote storage, Alertmanager).</span></span>
<span class="line"><span>  external_labels:</span></span>
<span class="line"><span>    monitor: &#39;codelab-monitor&#39;</span></span>
<span class="line"><span></span></span>
<span class="line"><span># A scrape configuration containing exactly one endpoint to scrape:</span></span>
<span class="line"><span># Here it&#39;s Prometheus itself.</span></span>
<span class="line"><span>scrape_configs:</span></span>
<span class="line"><span>   - job_name: &#39;prometheus&#39;</span></span>
<span class="line"><span>    scrape_interval: 5s</span></span>
<span class="line"><span>    static_configs:</span></span>
<span class="line"><span>      - targets: [&#39;localhost:9090&#39;]</span></span>
<span class="line"><span>    # 启用了账号密码 web-config.yml basic_auth_users 需要配置</span></span>
<span class="line"><span>    basic_auth:</span></span>
<span class="line"><span>      username: root</span></span>
<span class="line"><span>      password: devops666</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>web 控制台配置：web-config.yml</p><ul><li>指定账号密码 root devops666</li></ul></li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>basic_auth_users:</span></span>
<span class="line"><span>  root: $2a$10$c6OOt9f6LuhiabPyW0nkNOprb1ndQ/HHSfqjB/exe7yh5FaYUqvBy</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>启动：<code>docker compose up -d</code></li></ul><h3 id="prometheus-指定账号密码访问" tabindex="-1"><a class="header-anchor" href="#prometheus-指定账号密码访问"><span>Prometheus 指定账号密码访问</span></a></h3><ul><li>设置 https 或基础密码验证<a href="https://prometheus.io/docs/prometheus/latest/configuration/https/" target="_blank" rel="noopener noreferrer">文档</a></li><li>要启用 web 面板账号密码访问，指定 web 访问配置文件 <code>&#39;--web.config.file=/etc/prometheus/web-config.yml&#39;</code></li><li>映射 web-config.yml 指定账号密码 root devops666 ，Prometheus 密码需要使用 htpasswd 生成 bcrypt 密码 <a href="https://www.bejson.com/encrypt/bcrpyt_encode/" target="_blank" rel="noopener noreferrer">在线生成工具</a></li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>basic_auth_users:</span></span>
<span class="line"><span>  root: $2a$10$kmkC.lHR3Kwl19DE9l1KRerMDinEejEbNmJigrJZYAGkgzbVBUpa2</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>如果需要使用 Prometheus 监听 Prometheus ，并且 Prometheus 启用了身份验证，需要在配置出增加 basic_auth 配置节</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>scrape_configs:</span></span>
<span class="line"><span>   - job_name: &#39;prometheus&#39;</span></span>
<span class="line"><span>    scrape_interval: 5s</span></span>
<span class="line"><span>    static_configs:</span></span>
<span class="line"><span>      - targets: [&#39;localhost:9090&#39;]</span></span>
<span class="line"><span>    # 启用了账号密码 web-config.yml basic_auth_users 需要配置</span></span>
<span class="line"><span>    basic_auth:</span></span>
<span class="line"><span>      username: root</span></span>
<span class="line"><span>      password: devops666</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>掉坑里去了，如果一开始 basic_auth 没有配置对，重载配置是无效的，需要重启</p><ul><li><img src="`+l+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></li><li><img src="'+p+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></li></ul></li></ul><h3 id="重载配置" tabindex="-1"><a class="header-anchor" href="#重载配置"><span>重载配置</span></a></h3><p>修改了配置文件后，可以使用 api 接口重载配置，如果启用了账号密码可以使用 -u 参数指定（basic_auth 修改重载配置无效），没有就不需要加 -u 参数</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>curl -X POST http://localhost:9090/-/reload</span></span>
<span class="line"><span>或</span></span>
<span class="line"><span>curl -X POST -u root:devops666 http://localhost:9090/-/reload</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="添加-nginx-配置" tabindex="-1"><a class="header-anchor" href="#添加-nginx-配置"><span>添加 nginx 配置</span></a></h3><p>还不会在局域网申请 ssl 及配置的可以参考之前的文章 <a href="https://juejin.cn/post/7296754422750232576" target="_blank" rel="noopener noreferrer">前后端都用得上的 Nginx 日常使用经验</a></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>server {</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    listen 80;</span></span>
<span class="line"><span>    listen       443 ssl;</span></span>
<span class="line"><span>    server_name prometheus.devops.test.com;  # 自行修改成你的域名</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    ssl_certificate      /certs/prometheus.devops.test.com/server.crt;</span></span>
<span class="line"><span>    ssl_certificate_key  /certs/prometheus.devops.test.com/server.key;</span></span>
<span class="line"><span>    ssl_session_cache    shared:SSL:1m;</span></span>
<span class="line"><span>    ssl_session_timeout  5m;</span></span>
<span class="line"><span>    ssl_ciphers  HIGH:!aNULL:!MD5;</span></span>
<span class="line"><span>    ssl_prefer_server_ciphers  on;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    location / {</span></span>
<span class="line"><span>            proxy_pass http://prometheus:9090;</span></span>
<span class="line"><span>            proxy_http_version 1.1;</span></span>
<span class="line"><span>            proxy_buffering off;</span></span>
<span class="line"><span>            proxy_request_buffering off;</span></span>
<span class="line"><span>            proxy_set_header Upgrade $http_upgrade;</span></span>
<span class="line"><span>            proxy_set_header Connection &quot;upgrade&quot;;</span></span>
<span class="line"><span>            proxy_set_header Host $host;</span></span>
<span class="line"><span>            proxy_set_header X-Forwarded-For $remote_addr;</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="安装成功" tabindex="-1"><a class="header-anchor" href="#安装成功"><span>安装成功</span></a></h3><p>根据上面的配置，完成了 Prometheus 的搭建，监听本身 Prometheus 的情况</p><p>通过<code>https://prometheus.devops.test.com/</code> 使用账号密码 root devops666 登陆后即可</p><figure><img src="`+r+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="使用-docker-compose-安装-grafana" tabindex="-1"><a class="header-anchor" href="#使用-docker-compose-安装-grafana"><span>使用 docker compose 安装 Grafana</span></a></h2><p>Grafana 是一个开源的数据可视化和监控平台，它提供了丰富的图表和面板，用于展示各种指标和数据。提到 Prometheus，Grafana 自然是不不能落下，基于官方和社区，可以很快的制作出监控可视化面板，助力日常运维检测</p><h3 id="配置文件说明-1" tabindex="-1"><a class="header-anchor" href="#配置文件说明-1"><span>配置文件说明</span></a></h3><ul><li>grafana 版本：v10.2.0</li><li>指定账号密码： root devops666</li><li>端口映射：3000</li><li>挂载数据目录 ./grafana_data， 需要赋予权限：<code>mkdir -p grafana_data &amp;&amp; chown -R 472:472 ./grafana_data</code></li><li>指定网络为 devopsnetwork（<code>docker network create devopsnetwork</code>）</li><li>docker compose 文件：compose.yml ，安装 v10.2.0 替换版本号即可</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>version: &#39;3.1&#39;</span></span>
<span class="line"><span>services:</span></span>
<span class="line"><span>    grafana:</span></span>
<span class="line"><span>      restart: always</span></span>
<span class="line"><span>      container_name: grafana</span></span>
<span class="line"><span>      image: grafana/grafana:10.2.0</span></span>
<span class="line"><span>      ports:</span></span>
<span class="line"><span>        - &quot;3000:3000&quot;</span></span>
<span class="line"><span>      volumes:</span></span>
<span class="line"><span>        - ./grafana_data:/var/lib/grafana</span></span>
<span class="line"><span>      environment:</span></span>
<span class="line"><span>        - GF_SECURITY_ADMIN_USER=root</span></span>
<span class="line"><span>        - GF_SECURITY_ADMIN_PASSWORD=devops666</span></span>
<span class="line"><span>        - GF_USERS_ALLOW_SIGN_UP=false</span></span>
<span class="line"><span>      networks:</span></span>
<span class="line"><span>        - devopsnetwork</span></span>
<span class="line"><span>      </span></span>
<span class="line"><span>networks:</span></span>
<span class="line"><span>  devopsnetwork:</span></span>
<span class="line"><span>    external: true</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>启动：<code>docker compose up -d</code></li></ul><h3 id="添加-nginx-配置-1" tabindex="-1"><a class="header-anchor" href="#添加-nginx-配置-1"><span>添加 nginx 配置</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>server {</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    listen 80;</span></span>
<span class="line"><span>    listen       443 ssl;</span></span>
<span class="line"><span>    server_name grafana.devops.test.com;  # 自行修改成你的域名</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    ssl_certificate      /certs/grafana.devops.test.com/server.crt;</span></span>
<span class="line"><span>    ssl_certificate_key  /certs/grafana.devops.test.com/server.key;</span></span>
<span class="line"><span>    ssl_session_cache    shared:SSL:1m;</span></span>
<span class="line"><span>    ssl_session_timeout  5m;</span></span>
<span class="line"><span>    ssl_ciphers  HIGH:!aNULL:!MD5;</span></span>
<span class="line"><span>    ssl_prefer_server_ciphers  on;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    location / {</span></span>
<span class="line"><span>            proxy_pass http://grafana:3000;</span></span>
<span class="line"><span>            proxy_http_version 1.1;</span></span>
<span class="line"><span>            proxy_buffering off;</span></span>
<span class="line"><span>            proxy_request_buffering off;</span></span>
<span class="line"><span>            proxy_set_header Upgrade $http_upgrade;</span></span>
<span class="line"><span>            proxy_set_header Connection &quot;upgrade&quot;;</span></span>
<span class="line"><span>            proxy_set_header Host $host;</span></span>
<span class="line"><span>            proxy_set_header X-Forwarded-For $remote_addr;</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="安装成功-1" tabindex="-1"><a class="header-anchor" href="#安装成功-1"><span>安装成功</span></a></h3><p>通过<code>https://grafana.devops.test.com/</code>使用账号密码 root devops666 登陆后即可</p><figure><img src="`+t+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+d+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>制作监控面板步骤：</p><ol><li>指定一个数据源，数据源采集各组件的信息，提供给 Grafana 进行显示</li><li>可以从官方/社区/自行制作面板</li></ol><h3 id="添加-prometheus-数据源" tabindex="-1"><a class="header-anchor" href="#添加-prometheus-数据源"><span>添加 Prometheus 数据源</span></a></h3><figure><img src="'+c+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>! ! ! 数据源最好是用 IP+端口，避免容器内无法解析 test.com 域名</p><figure><img src="'+o+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="从-grafana-导入仪表板" tabindex="-1"><a class="header-anchor" href="#从-grafana-导入仪表板"><span>从 Grafana 导入仪表板</span></a></h3><ul><li>从<a href="https://grafana.com/grafana/dashboards/?dataSource=prometheus" target="_blank" rel="noopener noreferrer">官网</a> 获取一个监控 Prometheus 的面板 <a href="https://grafana.com/grafana/dashboards/3662-prometheus-2-0-overview/" target="_blank" rel="noopener noreferrer">Prometheus 2.0 Overview</a> Id：3662</li></ul><figure><img src="'+u+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>选择数据源确认导入</li></ul><figure><img src="'+m+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>查看面板，可以看到面板中有许多数据已经无法正常显示，这个在后续的一些面板中也经常会遇到，之前以为是 Grafana 不对，但我创建了一个依赖版本 4.5.0-beta1 测试发现依旧不行，应该还是是因为监控数据的问题</li></ul><figure><img src="'+v+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="grafana-v10-2-0-常用操作" tabindex="-1"><a class="header-anchor" href="#grafana-v10-2-0-常用操作"><span>Grafana v10.2.0 常用操作</span></a></h3><p>之前使用的 v6.7.2，当前已经是 v10.2.0 了，故还是选择将 grafana 升级到 v10，升级需要重新创建数据目录</p><h4 id="设置中文" tabindex="-1"><a class="header-anchor" href="#设置中文"><span>设置中文</span></a></h4><p>在写完文章发现原来已经支持中文了，补上～</p><figure><img src="'+g+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="导入面板" tabindex="-1"><a class="header-anchor" href="#导入面板"><span>导入面板</span></a></h4><ul><li>新建面板的入口在右上方</li></ul><figure><img src="'+h+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="添加数据源" tabindex="-1"><a class="header-anchor" href="#添加数据源"><span>添加数据源</span></a></h4><ul><li>测试了常用的几个数据源： Prometheus ClickHouse Redis</li><li>MongoDB 需要企业版，开源版可以使用 Prometheus 监控</li></ul><figure><img src="'+b+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>添加了数据源后有推荐的仪表盘可以直接启用</li></ul><figure><img src="'+f+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="添加插件" tabindex="-1"><a class="header-anchor" href="#添加插件"><span>添加插件</span></a></h4><ul><li>之前 v6.7.2 无法在线安装（墙），v10 可以在线安装了，方便许多</li><li>准备安装插件时记得切换 State 到 All</li></ul><figure><img src="'+_+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="常用服务的-prometheus-grafana-配置" tabindex="-1"><a class="header-anchor" href="#常用服务的-prometheus-grafana-配置"><span>常用服务的 Prometheus+Grafana 配置</span></a></h2><figure><img src="'+k+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>常用的一些组件可以在<a href="https://prometheus.io/download/#node_exporter" target="_blank" rel="noopener noreferrer">官方下载页</a>中去寻找，使用 Docker 可以去<a href="https://hub.docker.com/u/prom" target="_blank" rel="noopener noreferrer"> DockerHub </a>去找对应的镜像即可</p><ul><li>Grafana 版本：已升级到 v10.2.0</li><li>Prometheus 版本：v2.47.2</li></ul><figure><img src="'+x+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+y+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="linux-监控配置" tabindex="-1"><a class="header-anchor" href="#linux-监控配置"><span>Linux 监控配置</span></a></h3><ul><li><p>Prometheus 组件：<a href="https://github.com/prometheus/node_exporter" target="_blank" rel="noopener noreferrer">node_exporter</a> v1.7.0</p></li><li><p>Grafana 面板推荐：</p><ul><li><a href="https://grafana.com/grafana/dashboards/16098-1-node-exporter-for-prometheus-dashboard-cn-0417-job/" target="_blank" rel="noopener noreferrer">Node Exporter Dashboard 220417 通用 Job 分组版</a> ID: 16098</li><li><a href="https://grafana.com/grafana/dashboards/10180-kds-linux-hosts/" target="_blank" rel="noopener noreferrer">Linux Hosts Metrics | Base</a> ID: 10180</li></ul></li><li><p>指定映射端口：9100</p></li><li><p>docker 运行 node_exporter</p></li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>docker run -d \\</span></span>
<span class="line"><span>  -p 9100:9100 \\</span></span>
<span class="line"><span>  -v &quot;/:/host:ro,rslave&quot; \\</span></span>
<span class="line"><span>  --name node_exporter  \\</span></span>
<span class="line"><span>  --restart always \\</span></span>
<span class="line"><span>  quay.io/prometheus/node-exporter:v1.7.0 \\</span></span>
<span class="line"><span>  --path.rootfs=/host</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+A+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>运行成功并将其配置到 prometheus.yml</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>#global:</span></span>
<span class="line"><span>#  xxx</span></span>
<span class="line"><span>#...</span></span>
<span class="line"><span>scrape_configs:</span></span>
<span class="line"><span>  - job_name: &#39;linux&#39;</span></span>
<span class="line"><span>    # 每隔5秒从该作业中抓取目标</span></span>
<span class="line"><span>    scrape_interval: 5s</span></span>
<span class="line"><span>    static_configs:</span></span>
<span class="line"><span>      - targets: [&#39;192.168.123.214:9100&#39;,&#39;192.168.123.216:9100&#39;,&#39;192.168.123.219:9100&#39;,&#39;192.168.123.222:9100&#39;]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>重载配置后配置生效（<code> curl -X POST -u root:devops666 \`\`http://localhost:9090/-/reload</code>）</li></ul><figure><img src="`+w+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>可以使用前面安装的 JumpServer 工作台-作业中心-快捷命令 直接远程在四台 Linux 主机运行</li></ul><figure><img src="'+q+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>v6 导入 Grafana 面板 10180</li></ul><figure><img src="'+F+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+P+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>v10 导入面板 16098</li></ul><figure><img src="'+z+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="windows-监控配置" tabindex="-1"><a class="header-anchor" href="#windows-监控配置"><span>Windows 监控配置</span></a></h3><ul><li><p>Prometheus 组件：<a href="https://github.com/prometheus-community/windows_exporter" target="_blank" rel="noopener noreferrer">windows_exporter </a>v0.24</p></li><li><p>Grafana 面板推荐：</p><ul><li><a href="https://grafana.com/grafana/dashboards/10467" target="_blank" rel="noopener noreferrer">Windows Exporter Dashboard 20230531-StarsL.cn</a> ID: 10467</li><li><a href="https://grafana.com/grafana/dashboards/12566" target="_blank" rel="noopener noreferrer">Windows Exporter</a> ID: 12566</li></ul></li><li><p>从 Github Release 下载安装程序即可：<a href="https://github.com/prometheus-community/windows_exporter/releases/download/v0.24.0/windows_exporter-0.24.0-386.exe" target="_blank" rel="noopener noreferrer">从 release 页下载 v0.24</a></p></li><li><p>运行使用本机 IP+9182 端口访问即可：http://192.168.123.201:9182/</p></li></ul><figure><img src="'+D+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>运行成功并将其配置到 prometheus.yml</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>#global:</span></span>
<span class="line"><span>#  xxx</span></span>
<span class="line"><span>#...</span></span>
<span class="line"><span>scrape_configs:</span></span>
<span class="line"><span>  - job_name: &#39;win-node&#39;</span></span>
<span class="line"><span>    # 每隔5秒从该作业中抓取目标</span></span>
<span class="line"><span>    scrape_interval: 5s</span></span>
<span class="line"><span>    static_configs:</span></span>
<span class="line"><span>      - targets: [&#39;192.168.123.201:9182&#39;]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>重载配置后配置生效（<code> curl -X POST -u root:devops666 \`\`http://localhost:9090/-/reload</code>）</li></ul><figure><img src="`+G+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>v10 导入 Grafana 面板 12566</li></ul><figure><img src="'+S+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+E+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>可以修改时间范围查看监控情况</p><figure><img src="'+C+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>导入 10467</li></ul><figure><img src="'+I+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="nginx-监控配置" tabindex="-1"><a class="header-anchor" href="#nginx-监控配置"><span>Nginx 监控配置</span></a></h3><ul><li><p>Prometheus 组件：<a href="https://github.com/nginxinc/nginx-prometheus-exporter" target="_blank" rel="noopener noreferrer">nginx-prometheus-exporter</a> v0.11</p></li><li><p>Grafana 面板推荐：</p><ul><li><a href="https://grafana.com/grafana/dashboards/12708" target="_blank" rel="noopener noreferrer">NGINX exporter</a> ID: 12708</li><li><a href="https://grafana.com/grafana/dashboards/12268" target="_blank" rel="noopener noreferrer">Nginx 日志支持扩展，需要插件</a> ID：12268</li></ul></li><li><p>首先需要修改 nginx 配置启用 stub_status ，默认是建议新开一个端口来，我这里是局域网所以直接使用 80 端口配置：通过 192.168.123.214：80/basic_status 即可访问到 nginx 状态</p></li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>server {</span></span>
<span class="line"><span>    listen       80;</span></span>
<span class="line"><span>    #...其他配置</span></span>
<span class="line"><span>    location = /stub_status {</span></span>
<span class="line"><span>        stub_status;</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+R+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>指定映射端口：9113</li><li>docker 运行 nginx-prometheus-exporter</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>docker run -d -p 9113:9113 \\</span></span>
<span class="line"><span>--name nginx_exporter  \\</span></span>
<span class="line"><span>--restart always \\</span></span>
<span class="line"><span>nginx/nginx-prometheus-exporter:0.11 --nginx.scrape-uri=http://192.168.123.214:80/stub_status</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>运行使用 IP+9113 端口访问即可：http://192.168.123.214:9113/</li></ul><figure><img src="`+N+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+B+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>将其配置到 prometheus.yml</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>  - job_name: &#39;nginx&#39;</span></span>
<span class="line"><span>    # 每隔5秒从该作业中抓取目标</span></span>
<span class="line"><span>    scrape_interval: 5s</span></span>
<span class="line"><span>    static_configs:</span></span>
<span class="line"><span>      - targets: [&#39;192.168.123.214:9113&#39;]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>重载配置后生效：<code> curl -X POST -u root:devops666 \`\`http://localhost:9090/-/reload</code></p><figure><img src="`+T+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>导入 Grafana 面板：12708</li></ul><figure><img src="'+L+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="mysql-监控配置" tabindex="-1"><a class="header-anchor" href="#mysql-监控配置"><span>MySQL 监控配置</span></a></h3><ul><li><p>Prometheus 组件：<a href="https://github.com/prometheus/mysqld_exporter#general-flags" target="_blank" rel="noopener noreferrer">mysqld_exporter </a>v0.15.0</p></li><li><p>Grafana 面板推荐：</p><ul><li><a href="https://grafana.com/grafana/dashboards/11329" target="_blank" rel="noopener noreferrer">MYSQL 监控指标</a> ID:11329</li><li><a href="https://grafana.com/grafana/dashboards/7362" target="_blank" rel="noopener noreferrer">MySQL Overview</a> ID:7362</li><li><a href="https://grafana.com/grafana/dashboards/14057" target="_blank" rel="noopener noreferrer">MySQL Exporter Quickstart and Dashboard</a> ID: 14057</li></ul></li><li><p>mysql 监控账号创建</p><ul><li>监控账号密码： exporter devops666</li><li>限制最大连接数：MAX_USER_CONNECTIONS ：3</li><li>并授权查询权限及外部访问权限，允许的 Host 不能用 localhost，容器内部访问时会带上容器 IP 无法连接</li></ul></li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>CREATE USER &#39;exporter&#39;@&#39;%&#39; IDENTIFIED BY &#39;devops666&#39; WITH MAX_USER_CONNECTIONS 3;</span></span>
<span class="line"><span>GRANT PROCESS, REPLICATION CLIENT, SELECT ON *.* TO &#39;exporter&#39;@&#39;%&#39;;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>可以使用之前搭建的 JumpServer 进行执行</p><figure><img src="`+O+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li><p>指定映射端口：9104</p></li><li><p>docker 运行 mysqld_exporter</p><ul><li>建议指定和 mysql 服务同一网络，使用 mysql 的服务名加端口访问，不在同一网络的适合账号授权访问时需要将 localhost 修改为%，dockerhub 文档没有更新，以 GitHub 文档为主</li><li>主机名和端口：--mysqld.address mysql:3306 （一个网络就用服务名，或者使用 ip:port）</li><li>账号：--mysqld.username exporter</li><li>密码：-e MYSQLD_EXPORTER_PASSWORD=devops666</li><li>指定网络：--network devopsnetwork（和 mysql 一个网络，可以不需要）</li></ul></li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>docker run -d \\</span></span>
<span class="line"><span>  -p 9104:9104 \\</span></span>
<span class="line"><span>  -e MYSQLD_EXPORTER_PASSWORD=devops666 \\</span></span>
<span class="line"><span>  --name mysql_exporter  \\</span></span>
<span class="line"><span>  --restart always \\</span></span>
<span class="line"><span>  prom/mysqld-exporter:v0.15.0 \\</span></span>
<span class="line"><span>  --mysqld.address 192.168.123.214:3306  \\</span></span>
<span class="line"><span>  --mysqld.username exporter</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>运行使用 IP+9104 端口访问即可：http://192.168.123.214:9104/</li></ul><figure><img src="`+M+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>将其配置到 prometheus.yml</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>  - job_name: mysql </span></span>
<span class="line"><span>    static_configs:</span></span>
<span class="line"><span>      - targets:</span></span>
<span class="line"><span>        - 192.168.123.214:3306</span></span>
<span class="line"><span>    relabel_configs:</span></span>
<span class="line"><span>      - source_labels: [__address__]</span></span>
<span class="line"><span>        target_label: __param_target</span></span>
<span class="line"><span>      - source_labels: [__param_target]</span></span>
<span class="line"><span>        target_label: instance</span></span>
<span class="line"><span>      - target_label: __address__</span></span>
<span class="line"><span>        # The mysqld_exporter host:port</span></span>
<span class="line"><span>        replacement: 192.168.123.214:9104</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>重载配置后生效<code> curl -X POST -u root:devops666 \`\`http://localhost:9090/-/reload</code></p><figure><img src="`+H+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>导入 Grafana 面板 11329</li></ul><figure><img src="'+j+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="mongodb-监控配置" tabindex="-1"><a class="header-anchor" href="#mongodb-监控配置"><span>MongoDB 监控配置</span></a></h3><ul><li><p>Prometheus 组件：<a href="https://github.com/percona/mongodb_exporter" target="_blank" rel="noopener noreferrer">mongodb_exporter</a> v0.20</p></li><li><p>Grafana 面板推荐：</p><ul><li><a href="https://grafana.com/grafana/dashboards/14997-mongodb/" target="_blank" rel="noopener noreferrer">MongoDB</a> ID：14997 部分图表无效</li><li>MongoDB 数据源插件需要企业版才能使用</li></ul></li><li><p>docker 运行 mongodb_exporter 监听单机实例</p></li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>#docker stop mongodb_exporter &amp;&amp; docker rm mongodb_exporter</span></span>
<span class="line"><span>docker run -d -p 9216:9216 \\</span></span>
<span class="line"><span>--name mongodb_exporter  \\</span></span>
<span class="line"><span>--restart always \\</span></span>
<span class="line"><span>percona/mongodb_exporter:0.20 --compatible-mode --mongodb.uri=mongodb://root:devops666@192.168.123.214:27017</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>prometheus.yml 配置</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>  - job_name: mongodb</span></span>
<span class="line"><span>    static_configs:</span></span>
<span class="line"><span>      - targets: [&#39;192.168.123.214:9216&#39;]</span></span>
<span class="line"><span>        labels:</span></span>
<span class="line"><span>          instance: mongodb</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>导入面板 14997 目前只测试了单实例的监控，一些数据可以根据需要进行修改</li></ul><figure><img src="`+U+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="clickhouse-监控配置" tabindex="-1"><a class="header-anchor" href="#clickhouse-监控配置"><span>ClickHouse 监控配置</span></a></h3><ul><li><p>Prometheus 配置：clickhouse 9363 端口、9000 端口</p></li><li><p>9363：ClickHouse 的 Prometheus 默认指标端口</p></li><li><p>9000：Native Protocol 端口， ClickHouse TCP 协议，用于分布式查询的服务器间通信</p></li><li><p>Grafana 面板推荐：</p><ul><li><a href="https://grafana.com/grafana/dashboards/14192" target="_blank" rel="noopener noreferrer">ClickHouse 仪表盘</a> ID:14192</li></ul></li></ul><h4 id="使用-prometheus-数据源监控" tabindex="-1"><a class="header-anchor" href="#使用-prometheus-数据源监控"><span>使用 Prometheus 数据源监控</span></a></h4><ul><li>prometheus.yml 配置</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>  - job_name: clickhouse</span></span>
<span class="line"><span>    static_configs:</span></span>
<span class="line"><span>      - targets: [&#39;192.168.123.214:9363&#39;]</span></span>
<span class="line"><span>        labels:</span></span>
<span class="line"><span>          instance: clickhouse</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>参考之前安装 clickhouse 教程，增加启用 9000 端口，并在 grafana 中安装 clickhouse 数据源插件</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>version: &#39;3&#39;</span></span>
<span class="line"><span>services:</span></span>
<span class="line"><span>  clickhouse-server:</span></span>
<span class="line"><span>    container_name: db_clickhouse_20_6</span></span>
<span class="line"><span>    image: yandex/clickhouse-server:20.6.8.5</span></span>
<span class="line"><span>    restart: always</span></span>
<span class="line"><span>    ulimits:</span></span>
<span class="line"><span>      nofile:</span></span>
<span class="line"><span>        soft: 262144</span></span>
<span class="line"><span>        hard: 262144</span></span>
<span class="line"><span>    environment:</span></span>
<span class="line"><span>      - TZ=Asia/Shanghai</span></span>
<span class="line"><span>      - ports=8123,9363,9000</span></span>
<span class="line"><span>    ports:</span></span>
<span class="line"><span>      - 8123:8123</span></span>
<span class="line"><span>      - 9363:9363</span></span>
<span class="line"><span>      - 9000:9000</span></span>
<span class="line"><span>    volumes:</span></span>
<span class="line"><span>      - ./data:/var/lib/clickhouse</span></span>
<span class="line"><span>      - ./logs:/var/log/clickhouse-server</span></span>
<span class="line"><span>      # 指定配置文件</span></span>
<span class="line"><span>      - ./config:/etc/clickhouse-server</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="使用数据源插件监控" tabindex="-1"><a class="header-anchor" href="#使用数据源插件监控"><span>使用数据源插件监控</span></a></h4><ul><li>Grafana 启用数据源 clickhouse 插件</li></ul><figure><img src="`+Q+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>配置数据源 需要开启 9000 端口</li></ul><figure><img src="'+X+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>启用默认仪表盘</li></ul><figure><img src="'+V+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>预览效果</li></ul><figure><img src="'+W+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="redis-监控配置" tabindex="-1"><a class="header-anchor" href="#redis-监控配置"><span>Redis 监控配置</span></a></h3><ul><li><p>Prometheus 组件：<a href="https://github.com/oliver006/redis_exporter" target="_blank" rel="noopener noreferrer">redis_exporter </a>v1.55.0</p></li><li><p><a href="https://github.com/oliver006/redis_exporter#prometheus-configuration-to-scrape-multiple-redis-hosts" target="_blank" rel="noopener noreferrer">配置参考</a></p></li><li><p>端口：单机 9121:9121，集群 9122:9121</p></li><li><p>Grafana 面板推荐：</p><ul><li><a href="https://grafana.com/grafana/dashboards/14091" target="_blank" rel="noopener noreferrer">Redis Exporter Quickstart and Dashboard</a>: ID 14091</li><li><a href="https://grafana.com/grafana/dashboards/11835" target="_blank" rel="noopener noreferrer">Redis Dashboard for Prometheus Redis Exporter</a>: ID 11835</li><li><a href="https://grafana.com/grafana/dashboards/12776-redis/" target="_blank" rel="noopener noreferrer">Redis 数据源插件面板</a>：ID 12776</li></ul></li></ul><h4 id="redis-exporter-单机监控" tabindex="-1"><a class="header-anchor" href="#redis-exporter-单机监控"><span>redis_exporter 单机监控</span></a></h4><ul><li>docker 运行 oliver006/redis_exporter 指定端口 9121</li><li>通过 --redis.addr --redis.password 来指定地址和密码</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>#docker stop redis_exporter &amp;&amp; docker rm redis_exporter &amp;&amp;</span></span>
<span class="line"><span>docker run -d -p 9121:9121 \\</span></span>
<span class="line"><span>--name redis_exporter \\</span></span>
<span class="line"><span>--restart always \\</span></span>
<span class="line"><span>oliver006/redis_exporter:v1.55.0 \\</span></span>
<span class="line"><span>--redis.addr redis://192.168.123.214:6379 \\</span></span>
<span class="line"><span>--redis.password devops666</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>prometheus.yml 配置</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>  - job_name: redis_exporter</span></span>
<span class="line"><span>    static_configs:</span></span>
<span class="line"><span>      - targets: [&#39;192.168.123.214:9121&#39;]</span></span>
<span class="line"><span>        labels:</span></span>
<span class="line"><span>          instance: redis-node</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>导入面板 11835 监控单机</li></ul><figure><img src="`+Y+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>导入面板 14091 监控单机</li></ul><figure><img src="'+Z+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="redis-exporter-集群监控" tabindex="-1"><a class="header-anchor" href="#redis-exporter-集群监控"><span>redis_exporter 集群监控</span></a></h4><ul><li>docker 运行 oliver006/redis_exporter 指定端口 9122</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>docker run -d -p 9122:9121 \\</span></span>
<span class="line"><span>--name redis_exporter_targets \\</span></span>
<span class="line"><span>--restart always \\</span></span>
<span class="line"><span>oliver006/redis_exporter:v1.55.0</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>prometheus.yml 配置</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>  - job_name: redis_exporter_targets</span></span>
<span class="line"><span>    static_configs:</span></span>
<span class="line"><span>      - targets:</span></span>
<span class="line"><span>        - redis://192.168.123.216:6380</span></span>
<span class="line"><span>        - redis://192.168.123.219:6380</span></span>
<span class="line"><span>        - redis://192.168.123.222:6380</span></span>
<span class="line"><span>        - redis://192.168.123.216:6381</span></span>
<span class="line"><span>        - redis://192.168.123.219:6381</span></span>
<span class="line"><span>        - redis://192.168.123.222:6381</span></span>
<span class="line"><span>    metrics_path: /scrape</span></span>
<span class="line"><span>    relabel_configs:</span></span>
<span class="line"><span>      - source_labels: [__address__]</span></span>
<span class="line"><span>        target_label: __param_target</span></span>
<span class="line"><span>      - source_labels: [__param_target]</span></span>
<span class="line"><span>        target_label: instance</span></span>
<span class="line"><span>      - target_label: __address__</span></span>
<span class="line"><span>        replacement: 192.168.123.214:9122</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>使用面板 11835 监控集群节点</li></ul><figure><img src="`+J+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>使用面板 14091 监控集群节点</li></ul><figure><img src="'+$+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="使用数据源插件监控-redis-单机-集群" tabindex="-1"><a class="header-anchor" href="#使用数据源插件监控-redis-单机-集群"><span>使用数据源插件监控 Redis 单机/集群</span></a></h4><ul><li>安装 Redis 数据源插件</li></ul><figure><img src="'+K+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>配置 Redis 单机数据源 Redis-Node</li></ul><figure><img src="'+ss+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>配置 Redis 集群数据源 Redis-Cluster</li></ul><figure><img src="'+ns+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>导入面板 12776 指定数据源</li></ul><figure><img src="'+as+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>集群监控预览</li></ul><figure><img src="'+es+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="rabbitmq-监控配置" tabindex="-1"><a class="header-anchor" href="#rabbitmq-监控配置"><span>RabbitMQ 监控配置</span></a></h3><ul><li><p>Grafana 面板推荐：</p><ul><li><a href="https://grafana.com/grafana/dashboards/10991-rabbitmq-overview/" target="_blank" rel="noopener noreferrer">rabbitmq-overview</a> ID:10991</li></ul></li><li><p>RabbitMQ 内置 Prometheus 支持 <a href="https://www.rabbitmq.com/prometheus.html#overview-prometheus" target="_blank" rel="noopener noreferrer">文档</a></p></li><li><p>需要使用时映射 15692:15692 端口</p></li><li><p>并确保插件已启用：<code>docker exec -it rabbitmq_3_12 /bin/bash -c &quot;rabbitmq-plugins enable rabbitmq_prometheus&quot;</code></p></li></ul><figure><img src="'+is+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>Prometheus 配置</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>  - job_name: rabbitmq</span></span>
<span class="line"><span>    static_configs:</span></span>
<span class="line"><span>      - targets: [&#39;192.168.123.214:15692&#39;]</span></span>
<span class="line"><span>        labels:</span></span>
<span class="line"><span>          instance: rabbitmq</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+ls+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>导入 Grafana 面板 10991</li></ul><figure><img src="'+ps+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="站点监控配置" tabindex="-1"><a class="header-anchor" href="#站点监控配置"><span>站点监控配置</span></a></h3><ul><li><p>Prometheus 组件：<a href="https://github.com/prometheus/blackbox_exporter" target="_blank" rel="noopener noreferrer">blackbox_exporter</a> v0.24.0</p></li><li><p>Grafana 面板推荐：</p><ul><li><a href="https://grafana.com/grafana/dashboards/13659-blackbox-exporter-http-prober/" target="_blank" rel="noopener noreferrer">Blackbox Exporter</a> ID: 13659</li><li><a href="https://grafana.com/grafana/dashboards/9719-decentralized-blackbox-exporter-copy/" target="_blank" rel="noopener noreferrer">Decentralized Blackbox</a> ID: 9719</li><li><a href="https://grafana.com/grafana/dashboards/9965-1-blackbox-exporter-dashboard-20220412/" target="_blank" rel="noopener noreferrer">Blackbox Exporter Dashboard</a> ID: 9965</li></ul></li><li><p>使用 docker compose up -d 运行 blackbox-exporter ，需要映射配置 blackbox.yml</p></li><li><p>挂载了模块配置文件 blackbox.yml 和局域网的证书 myCA.pem</p></li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>version: &#39;3.1&#39;</span></span>
<span class="line"><span>services:</span></span>
<span class="line"><span>  blackbox_exporter:</span></span>
<span class="line"><span>    restart: always</span></span>
<span class="line"><span>    container_name: blackbox_exporter </span></span>
<span class="line"><span>    image: prom/blackbox-exporter:v0.24.0</span></span>
<span class="line"><span>    command:</span></span>
<span class="line"><span>      # 配置文件</span></span>
<span class="line"><span>      - &#39;--config.file=/config/blackbox.yml&#39;</span></span>
<span class="line"><span>    volumes:</span></span>
<span class="line"><span>      # blackbox.yml myCA.pem</span></span>
<span class="line"><span>      - ./config:/config</span></span>
<span class="line"><span>    ports:</span></span>
<span class="line"><span>      - 9115:9115</span></span>
<span class="line"><span>    networks:</span></span>
<span class="line"><span>      - devopsnetwork</span></span>
<span class="line"><span>      </span></span>
<span class="line"><span>networks:</span></span>
<span class="line"><span>  devopsnetwork:</span></span>
<span class="line"><span>    external: true</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>blackbox.yml 配置，添加了 http_custom_ca_devops 将局域网中的证书映射进去了</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>modules:</span></span>
<span class="line"><span>  http_2xx:</span></span>
<span class="line"><span>    prober: http</span></span>
<span class="line"><span>    http:</span></span>
<span class="line"><span>      preferred_ip_protocol: &quot;ip4&quot;</span></span>
<span class="line"><span>  http_post_2xx:</span></span>
<span class="line"><span>    prober: http</span></span>
<span class="line"><span>    http:</span></span>
<span class="line"><span>      method: POST</span></span>
<span class="line"><span>  tcp_connect:</span></span>
<span class="line"><span>    prober: tcp</span></span>
<span class="line"><span>  pop3s_banner:</span></span>
<span class="line"><span>    prober: tcp</span></span>
<span class="line"><span>    tcp:</span></span>
<span class="line"><span>      query_response:</span></span>
<span class="line"><span>      - expect: &quot;^+OK&quot;</span></span>
<span class="line"><span>      tls: true</span></span>
<span class="line"><span>      tls_config:</span></span>
<span class="line"><span>        insecure_skip_verify: false</span></span>
<span class="line"><span>        ca_file: </span></span>
<span class="line"><span>  grpc:</span></span>
<span class="line"><span>    prober: grpc</span></span>
<span class="line"><span>    grpc:</span></span>
<span class="line"><span>      tls: true</span></span>
<span class="line"><span>      preferred_ip_protocol: &quot;ip4&quot;</span></span>
<span class="line"><span>  grpc_plain:</span></span>
<span class="line"><span>    prober: grpc</span></span>
<span class="line"><span>    grpc:</span></span>
<span class="line"><span>      tls: false</span></span>
<span class="line"><span>      service: &quot;service1&quot;</span></span>
<span class="line"><span>  ssh_banner:</span></span>
<span class="line"><span>    prober: tcp</span></span>
<span class="line"><span>    tcp:</span></span>
<span class="line"><span>      query_response:</span></span>
<span class="line"><span>      - expect: &quot;^SSH-2.0-&quot;</span></span>
<span class="line"><span>      - send: &quot;SSH-2.0-blackbox-ssh-check&quot;</span></span>
<span class="line"><span>  irc_banner:</span></span>
<span class="line"><span>    prober: tcp</span></span>
<span class="line"><span>    tcp:</span></span>
<span class="line"><span>      query_response:</span></span>
<span class="line"><span>      - send: &quot;NICK prober&quot;</span></span>
<span class="line"><span>      - send: &quot;USER prober prober prober :prober&quot;</span></span>
<span class="line"><span>      - expect: &quot;PING :([^ ]+)&quot;</span></span>
<span class="line"><span>        send: &quot;PONG \${1}&quot;</span></span>
<span class="line"><span>      - expect: &quot;^:[^ ]+ 001&quot;</span></span>
<span class="line"><span>  icmp:</span></span>
<span class="line"><span>    prober: icmp</span></span>
<span class="line"><span>  icmp_ttl5:</span></span>
<span class="line"><span>    prober: icmp</span></span>
<span class="line"><span>    timeout: 5s</span></span>
<span class="line"><span>    icmp:</span></span>
<span class="line"><span>      ttl: 5</span></span>
<span class="line"><span>  http_custom_ca_devops:</span></span>
<span class="line"><span>    prober: http</span></span>
<span class="line"><span>    http:</span></span>
<span class="line"><span>      method: GET</span></span>
<span class="line"><span>      tls_config:</span></span>
<span class="line"><span>        ca_file: /config/myCA.pem</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>prometheus.yml 配置</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>  - job_name: blackbox_devops</span></span>
<span class="line"><span>    metrics_path: /probe</span></span>
<span class="line"><span>    params:</span></span>
<span class="line"><span>      module: [ http_custom_ca_devops ]  # Look for a HTTP 200 response.</span></span>
<span class="line"><span>    dns_sd_configs:</span></span>
<span class="line"><span>      - names:</span></span>
<span class="line"><span>          - nginx.devops.test.com</span></span>
<span class="line"><span>          - apollo.devops.test.com</span></span>
<span class="line"><span>          - rabbitmq.devops.test.com</span></span>
<span class="line"><span>          - dns.devops.test.com</span></span>
<span class="line"><span>          - nexus.devops.test.com</span></span>
<span class="line"><span>          - jumpserver.devops.test.com</span></span>
<span class="line"><span>          - grafana.devops.test.com</span></span>
<span class="line"><span>          - prometheus.devops.test.com</span></span>
<span class="line"><span>        type: A</span></span>
<span class="line"><span>        port: 443</span></span>
<span class="line"><span>    relabel_configs:</span></span>
<span class="line"><span>      - source_labels: [__address__]</span></span>
<span class="line"><span>        target_label: __param_target</span></span>
<span class="line"><span>        replacement: https://192.168.123.214:443/  # Make probe URL be like https://1.2.3.4:443/</span></span>
<span class="line"><span>      - source_labels: [__meta_dns_name]</span></span>
<span class="line"><span>        target_label: instance</span></span>
<span class="line"><span>      - target_label: __address__</span></span>
<span class="line"><span>        replacement: 192.168.123.214:9115  # The blackbox exporter&#39;s real hostname:port.</span></span>
<span class="line"><span>      - source_labels: [__meta_dns_name]</span></span>
<span class="line"><span>        target_label: __param_hostname  # Make domain name become &#39;Host&#39; header for probe requests</span></span>
<span class="line"><span>      - source_labels: [__meta_dns_name]</span></span>
<span class="line"><span>        target_label: vhost  # and store it in &#39;vhost&#39; label</span></span>
<span class="line"><span>        #匹配apollo，需要访问/health检查状态</span></span>
<span class="line"><span>      - source_labels: [__param_hostname]</span></span>
<span class="line"><span>        regex: &#39;apollo.*&#39;</span></span>
<span class="line"><span>        target_label: __param_target</span></span>
<span class="line"><span>        replacement: https://192.168.123.214:443/health</span></span>
<span class="line"><span>        #匹配prometheus 开启了basic_auth 所以可以使用下面这种方式进行验证，问的gpt，还真行</span></span>
<span class="line"><span>      - source_labels: [__param_hostname]</span></span>
<span class="line"><span>        regex: &#39;prometheus.*&#39;</span></span>
<span class="line"><span>        target_label: __param_target</span></span>
<span class="line"><span>        replacement: https://root:devops666@192.168.123.214:443</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>重载 prometheus 配置生效</li></ul><figure><img src="`+rs+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>导入面板 13659 监控效果</li></ul><figure><img src="'+ts+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>导入面板 9719 监控效果</li></ul><figure><img src="'+ds+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>导入面板 9965 监控效果</li></ul><figure><img src="'+cs+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="grafana-监控告警设置" tabindex="-1"><a class="header-anchor" href="#grafana-监控告警设置"><span>Grafana 监控告警设置</span></a></h2><p>通过设置 <strong>Alert rules（预警规则）</strong> ，匹配到有指标符合规则时，就会根据 <strong>Notification policies（通知策略）</strong> 进行消息发送，发送的内容和模板在 <strong>Contact points（通知方式）</strong> 设置</p><p>下面完成一个实际的使用场景：检测 RabbitMQ 面板状态，服务不可用时进行预警，通过企业微信机器人进行群通知</p><h4 id="设置预警规则" tabindex="-1"><a class="header-anchor" href="#设置预警规则"><span>设置预警规则</span></a></h4><ul><li>添加规则名称：RabbitMQ 监控</li></ul><figure><img src="'+os+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>选择数据源：Prometheus</li><li>设置指标条件：内存使用字节 erlang_mnesia_memory_usage_bytes 并指定 job 是 rabbitmq</li></ul><figure><img src="'+us+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>设置预警条件：内存值小于 1（无效）时进行通知</li></ul><figure><img src="'+ms+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>设置检查规则，30s 检查一次，30s 等待期，立刻通知</li><li>Pending period 等待期：如果警报条件不再满足，警报规则将会恢复到正常状态，而不会触发警报</li></ul><figure><img src="'+vs+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>这个和默认的通知策略还有关系，需要结合使用，默认是 30s，5 分钟等待期，4 小时内不重复发送可根据需要修改</li></ul><figure><img src="'+gs+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>设置提醒信息及服务地址</li></ul><figure><img src="'+hs+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="设置通知策略" tabindex="-1"><a class="header-anchor" href="#设置通知策略"><span>设置通知策略</span></a></h4><p>可以通过修改重复间隔，重新发送通知</p><figure><img src="'+bs+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+fs+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="设置告警模板" tabindex="-1"><a class="header-anchor" href="#设置告警模板"><span>设置告警模板</span></a></h4><p>Grafana 使用 Go 模板语言来创建通知消息，可根据<a href="https://grafana.com/docs/grafana/latest/alerting/manage-notifications/template-notifications/" target="_blank" rel="noopener noreferrer">文档</a>自行编写，另外一个<a href="https://docs.aws.amazon.com/zh_cn/grafana/latest/userguide/v9-alerting-notifications-go-templating.html" target="_blank" rel="noopener noreferrer"> aws 的中文文档</a>可以参考</p><ul><li>结合文档写的一个通知模板</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>{{ define &quot;DevOpsTemplate&quot; -}}</span></span>
<span class="line"><span>{{- range .Alerts -}}</span></span>
<span class="line"><span>{{- range .Annotations.SortedPairs -}}</span></span>
<span class="line"><span>{{if eq .Name &quot;summary&quot; }}</span></span>
<span class="line"><span>**{{ &quot;预警消息&quot; }}**：{{ .Value }}</span></span>
<span class="line"><span>{{- end -}}</span></span>
<span class="line"><span>{{ end }}</span></span>
<span class="line"><span>{{- range .Annotations.SortedPairs -}}</span></span>
<span class="line"><span>{{if eq .Name &quot;runbook_url&quot; }}</span></span>
<span class="line"><span>**{{ &quot;服务地址&quot; }}**：{{ .Value }}</span></span>
<span class="line"><span>{{- end -}}</span></span>
<span class="line"><span>{{ end }}</span></span>
<span class="line"><span>**{{&quot;预警分组&quot;}}**：{{ .Labels.grafana_folder }}</span></span>
<span class="line"><span>**{{&quot;开始时间&quot;}}**：{{ (.StartsAt.Add 28800e9).Format &quot;2006-01-02 15:04:05&quot;}}</span></span>
<span class="line"><span>**{{&quot;预警参数&quot;}}**：</span></span>
<span class="line"><span>    {{ range .Labels.SortedPairs -}}</span></span>
<span class="line"><span>      {{ .Name }}：{{ .Value }}</span></span>
<span class="line"><span>    {{ end }}</span></span>
<span class="line"><span>    {{- range .Annotations.SortedPairs -}}</span></span>
<span class="line"><span>    {{- if and (ne .Name &quot;summary&quot;) (ne .Name &quot;runbook_url&quot;) -}}</span></span>
<span class="line"><span>      {{ .Name }}：{{ .Value }}</span></span>
<span class="line"><span>    {{ end }}</span></span>
<span class="line"><span>{{ end }}</span></span>
<span class="line"><span>{{- end -}}</span></span>
<span class="line"><span>{{- end -}}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="设置通知方式" tabindex="-1"><a class="header-anchor" href="#设置通知方式"><span>设置通知方式</span></a></h4><figure><img src="`+_s+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>支持多种通知，根据需要配置，这里以企业微信机器人为例</p><figure><img src="'+ks+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>需要通过告警快速定位问题，实际应用中肯定是需要将告警实例及其信息一并通知，所以还需要结合告警模板和规则进行消息的发送。使用模板语法指定前面设置的模板</p><figure><img src="'+xs+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>设置完成后，当预警规则设置页面出现异常提示时，就会进行提示了</p><figure><img src="'+ys+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="踩坑记录" tabindex="-1"><a class="header-anchor" href="#踩坑记录"><span>踩坑记录</span></a></h2><ul><li><p>安装官方文档运行后，提示无权限，需要赋予挂载目录权限：<code>chown 65534 ./prometheus_data</code></p></li><li><p>权限在之前的使用中使用 777 权限，能够解决，但是很明显不是最佳方案，然后好好找了下，最后发现这个问题很久就有人提出 pr，只是一直没有被合并，大概下个版本就可以了， <a href="https://github.com/prometheus/prometheus/pull/8747" target="_blank" rel="noopener noreferrer">关于持久化权限的讨论</a></p></li><li><p>basic_auth 修改后，重载配置是无效的，需要重新启动后才生效</p><ul><li><img src="'+As+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></li><li><img src="'+ws+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></li></ul></li><li><p>redis 使用 redis_exporter，监控多个如果有密码，没有密码，密码不一样的实例需要分开运行配置</p></li><li><p>mongodb 的监控始终不是很完美</p></li><li><p>站点监控的证书验证和密码验证反反复复尝试了很久，以下为主要踩坑的地方</p><ul><li>prometheus.yml 配置 blackbox job 的 params module 只能有一个，多个只会第一个生效</li><li>blackbox 配置的证书可以是 pem，无效转换成 crt 格式，配置：ca_file: /config/myCA.pem</li><li>basic_auth 配置不需要再配置 job，可以直接使用特殊的 url 格式：<code>https://root:devops666@192.168.123.214:443</code></li></ul></li><li><p>Grafana 服务重启后，nginx 代理域名访问一直 502，IP 可以访问，重启 nginx 后就可以访问了</p></li><li><p>Grafana 的通知模板语法，可<a href="https://docs.aws.amazon.com/zh_cn/grafana/latest/userguide/v9-alerting-notifications-go-templating.html#v9-go-removespace" target="_blank" rel="noopener noreferrer">参考文档</a></p></li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span># 1.定义模板</span></span>
<span class="line"><span>{{ define &quot;模板名称&quot; -}}</span></span>
<span class="line"><span>/**/</span></span>
<span class="line"><span>{{ end }}</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 2.循环预警消息</span></span>
<span class="line"><span>{{ range .Alerts }}</span></span>
<span class="line"><span>/**/</span></span>
<span class="line"><span>{{ end }}</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 3.打印加粗文字</span></span>
<span class="line"><span>**{{ &quot;预警消息&quot; }}**</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 4.删除空格和换行符</span></span>
<span class="line"><span>{{ range .Alerts -}}</span></span>
<span class="line"><span>  {{ range .Labels.SortedPairs -}}</span></span>
<span class="line"><span>    {{ .Name }} = {{ .Value }}</span></span>
<span class="line"><span>  {{ end }}</span></span>
<span class="line"><span>{{ end }}</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 5. 循环附加信息</span></span>
<span class="line"><span>{{- range .Annotations.SortedPairs -}}</span></span>
<span class="line"><span>{{ end}}</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 5. if判断</span></span>
<span class="line"><span>{{if eq .Name &quot;runbook_url&quot; }}</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 6. 时区问题，+8设置</span></span>
<span class="line"><span>**{{&quot;开始时间&quot;}}**：{{ (.StartsAt.Add 28800e9).Format &quot;2006-01-02 15:04:05&quot;}}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="相关文档" tabindex="-1"><a class="header-anchor" href="#相关文档"><span>相关文档</span></a></h2><ul><li><a href="https://github.com/prometheus/prometheus" target="_blank" rel="noopener noreferrer">Prometheus Github</a></li><li><a href="https://prometheus.io/docs/prometheus/latest/installation/" target="_blank" rel="noopener noreferrer">Prometheus 官方文档</a></li><li><a href="https://www.bejson.com/encrypt/bcrpyt_encode/" target="_blank" rel="noopener noreferrer">Prometheus Bcrypt 密码生成</a></li><li><a href="https://github.com/prometheus/prometheus/tree/release-2.47/documentation/examples" target="_blank" rel="noopener noreferrer">Prometheus 配置文件参考示例</a></li><li><a href="https://github.com/prometheus/prometheus/pull/8747" target="_blank" rel="noopener noreferrer">Prometheus 数据持久化权限的讨论</a></li><li><a href="https://github.com/grafana/" target="_blank" rel="noopener noreferrer">Grafana Github</a></li><li><a href="https://grafana.com/grafana/dashboards/" target="_blank" rel="noopener noreferrer">Grafana 面板检索</a></li><li><a href="https://docs.aws.amazon.com/zh_cn/grafana/latest/userguide/v9-alerting-notifications-go-templating.html" target="_blank" rel="noopener noreferrer">Grafana 通知模板中文文档</a></li><li><a href="https://www.cnblogs.com/xuwujing/p/14065740.html" target="_blank" rel="noopener noreferrer">Prometheus+Grafana+Alertmanager 实现告警推送教程</a></li><li><a href="https://www.cnblogs.com/xuwujing/p/17832216.html" target="_blank" rel="noopener noreferrer">Grafana 新手教程-实现仪表盘创建和告警推送</a>****</li></ul><h2 id="后语" tabindex="-1"><a class="header-anchor" href="#后语"><span>后语</span></a></h2><blockquote><p>研究了差不多大半个月，从常用中间件的监控到设置预警，花费了很大的功夫，也掉了不少的头发。</p><p>这篇文章写完，个人感觉 Prometheus+Grafana 这套方案算是入门了，满足日常使用肯定是没问题的。</p><p>走过不要错过，欢迎留言交流。</p></blockquote>`,253)]))}const Gs=n(qs,[["render",Fs],["__file","devops_prometheus_grafana_install_use_db_site_monitor.html.vue"]]),Ss=JSON.parse('{"path":"/posts/devops/devops_prometheus_grafana_install_use_db_site_monitor.html","title":"Prometheus+Grafana 监控平台实践-搭建&常用服务监控&告警","lang":"zh-CN","frontmatter":{"title":"Prometheus+Grafana 监控平台实践-搭建&常用服务监控&告警","date":"2023-12-07T08:07:00.000Z","category":["DevOps"],"tag":["devops","docker","docker-compose","grafana","prometheus"],"description":"前言 Prometheus 是一个开放性的监控解决方案，通过各种 Exporter 采集当前主机/服务的数据，和 Grafana 相结合可以实现强大的监控和可视化功能 本篇将分享使用 docker compose 构建 Prometheus+Grafana，并监控之前文章所搭建的主机&服务，分享日常使用的一些使用经验 文章较长，已安装可略过，推荐先看第...","head":[["meta",{"property":"og:url","content":"https://www.yimo.link/posts/devops/devops_prometheus_grafana_install_use_db_site_monitor.html"}],["meta",{"property":"og:site_name","content":"易墨网"}],["meta",{"property":"og:title","content":"Prometheus+Grafana 监控平台实践-搭建&常用服务监控&告警"}],["meta",{"property":"og:description","content":"前言 Prometheus 是一个开放性的监控解决方案，通过各种 Exporter 采集当前主机/服务的数据，和 Grafana 相结合可以实现强大的监控和可视化功能 本篇将分享使用 docker compose 构建 Prometheus+Grafana，并监控之前文章所搭建的主机&服务，分享日常使用的一些使用经验 文章较长，已安装可略过，推荐先看第..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-28T11:15:42.000Z"}],["meta",{"property":"article:tag","content":"devops"}],["meta",{"property":"article:tag","content":"docker"}],["meta",{"property":"article:tag","content":"docker-compose"}],["meta",{"property":"article:tag","content":"grafana"}],["meta",{"property":"article:tag","content":"prometheus"}],["meta",{"property":"article:published_time","content":"2023-12-07T08:07:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-10-28T11:15:42.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Prometheus+Grafana 监控平台实践-搭建&常用服务监控&告警\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-12-07T08:07:00.000Z\\",\\"dateModified\\":\\"2024-10-28T11:15:42.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"易墨\\",\\"url\\":\\"https://www.yimo.link\\"}]}"]]},"headers":[{"level":2,"title":"前言","slug":"前言","link":"#前言","children":[{"level":3,"title":"特点","slug":"特点","link":"#特点","children":[]},{"level":3,"title":"使用情况","slug":"使用情况","link":"#使用情况","children":[]}]},{"level":2,"title":"使用 docker compose 安装 Prometheus","slug":"使用-docker-compose-安装-prometheus","link":"#使用-docker-compose-安装-prometheus","children":[{"level":3,"title":"配置文件说明","slug":"配置文件说明","link":"#配置文件说明","children":[]},{"level":3,"title":"Prometheus 指定账号密码访问","slug":"prometheus-指定账号密码访问","link":"#prometheus-指定账号密码访问","children":[]},{"level":3,"title":"重载配置","slug":"重载配置","link":"#重载配置","children":[]},{"level":3,"title":"添加 nginx 配置","slug":"添加-nginx-配置","link":"#添加-nginx-配置","children":[]},{"level":3,"title":"安装成功","slug":"安装成功","link":"#安装成功","children":[]}]},{"level":2,"title":"使用 docker compose 安装 Grafana","slug":"使用-docker-compose-安装-grafana","link":"#使用-docker-compose-安装-grafana","children":[{"level":3,"title":"配置文件说明","slug":"配置文件说明-1","link":"#配置文件说明-1","children":[]},{"level":3,"title":"添加 nginx 配置","slug":"添加-nginx-配置-1","link":"#添加-nginx-配置-1","children":[]},{"level":3,"title":"安装成功","slug":"安装成功-1","link":"#安装成功-1","children":[]},{"level":3,"title":"添加 Prometheus 数据源","slug":"添加-prometheus-数据源","link":"#添加-prometheus-数据源","children":[]},{"level":3,"title":"从 Grafana 导入仪表板","slug":"从-grafana-导入仪表板","link":"#从-grafana-导入仪表板","children":[]},{"level":3,"title":"Grafana v10.2.0 常用操作","slug":"grafana-v10-2-0-常用操作","link":"#grafana-v10-2-0-常用操作","children":[{"level":4,"title":"设置中文","slug":"设置中文","link":"#设置中文","children":[]},{"level":4,"title":"导入面板","slug":"导入面板","link":"#导入面板","children":[]},{"level":4,"title":"添加数据源","slug":"添加数据源","link":"#添加数据源","children":[]},{"level":4,"title":"添加插件","slug":"添加插件","link":"#添加插件","children":[]}]}]},{"level":2,"title":"常用服务的 Prometheus+Grafana 配置","slug":"常用服务的-prometheus-grafana-配置","link":"#常用服务的-prometheus-grafana-配置","children":[{"level":3,"title":"Linux 监控配置","slug":"linux-监控配置","link":"#linux-监控配置","children":[]},{"level":3,"title":"Windows 监控配置","slug":"windows-监控配置","link":"#windows-监控配置","children":[]},{"level":3,"title":"Nginx 监控配置","slug":"nginx-监控配置","link":"#nginx-监控配置","children":[]},{"level":3,"title":"MySQL 监控配置","slug":"mysql-监控配置","link":"#mysql-监控配置","children":[]},{"level":3,"title":"MongoDB 监控配置","slug":"mongodb-监控配置","link":"#mongodb-监控配置","children":[]},{"level":3,"title":"ClickHouse 监控配置","slug":"clickhouse-监控配置","link":"#clickhouse-监控配置","children":[{"level":4,"title":"使用 Prometheus 数据源监控","slug":"使用-prometheus-数据源监控","link":"#使用-prometheus-数据源监控","children":[]},{"level":4,"title":"使用数据源插件监控","slug":"使用数据源插件监控","link":"#使用数据源插件监控","children":[]}]},{"level":3,"title":"Redis 监控配置","slug":"redis-监控配置","link":"#redis-监控配置","children":[{"level":4,"title":"redis_exporter 单机监控","slug":"redis-exporter-单机监控","link":"#redis-exporter-单机监控","children":[]},{"level":4,"title":"redis_exporter 集群监控","slug":"redis-exporter-集群监控","link":"#redis-exporter-集群监控","children":[]},{"level":4,"title":"使用数据源插件监控 Redis 单机/集群","slug":"使用数据源插件监控-redis-单机-集群","link":"#使用数据源插件监控-redis-单机-集群","children":[]}]},{"level":3,"title":"RabbitMQ 监控配置","slug":"rabbitmq-监控配置","link":"#rabbitmq-监控配置","children":[]},{"level":3,"title":"站点监控配置","slug":"站点监控配置","link":"#站点监控配置","children":[]}]},{"level":2,"title":"Grafana 监控告警设置","slug":"grafana-监控告警设置","link":"#grafana-监控告警设置","children":[{"level":4,"title":"设置预警规则","slug":"设置预警规则","link":"#设置预警规则","children":[]},{"level":4,"title":"设置通知策略","slug":"设置通知策略","link":"#设置通知策略","children":[]},{"level":4,"title":"设置告警模板","slug":"设置告警模板","link":"#设置告警模板","children":[]},{"level":4,"title":"设置通知方式","slug":"设置通知方式","link":"#设置通知方式","children":[]}]},{"level":2,"title":"踩坑记录","slug":"踩坑记录","link":"#踩坑记录","children":[]},{"level":2,"title":"相关文档","slug":"相关文档","link":"#相关文档","children":[]},{"level":2,"title":"后语","slug":"后语","link":"#后语","children":[]}],"git":{"createdTime":1730114142000,"updatedTime":1730114142000,"contributors":[{"name":"yimo","email":"yimo@wikiglobal.com","commits":1}]},"readingTime":{"minutes":17.38,"words":5213},"filePathRelative":"posts/devops/devops_prometheus_grafana_install_use_db_site_monitor.md","localizedDate":"2023年12月7日","excerpt":"<h2>前言</h2>\\n<blockquote>\\n<p>Prometheus 是一个开放性的监控解决方案，通过各种 Exporter 采集当前主机/服务的数据，和 Grafana 相结合可以实现强大的监控和可视化功能</p>\\n<p>本篇将分享使用 docker compose 构建 Prometheus+Grafana，并监控之前文章所搭建的主机&amp;服务，分享日常使用的一些使用经验\\n文章较长，已安装可略过，推荐先看第三节 <a href=\\"https://www.cnblogs.com/morang/p/devops-prometheus-grafana-install-use-db-site-monitor.html#%E5%B8%B8%E7%94%A8%E6%9C%8D%E5%8A%A1%E7%9A%84-prometheusgrafana-%E9%85%8D%E7%BD%AE\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">常用服务的 Prometheus+Grafana 配置</a></p>\\n</blockquote>","autoDesc":true}');export{Gs as comp,Ss as data};
