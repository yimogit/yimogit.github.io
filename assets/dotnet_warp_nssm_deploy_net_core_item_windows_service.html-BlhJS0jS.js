import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,e as t,o as a}from"./app-BHZ56IUu.js";const i="/assets/662652-20190429182019642-759969077-CTZzNPQK.png",r="/assets/662652-20190429182046933-1812210808-B7vdGT48.png",o="/assets/662652-20190429182057573-1724429311-wI8Me2G0.png",l="/assets/662652-20190429182108606-1435071921-CWVCNLO5.png",p={};function d(c,e){return a(),s("div",null,e[0]||(e[0]=[t('<blockquote><p>如果你想将 .net core 项目以服务的形式部署到 windows 系统,希望本篇文章能够让你少走弯路</p></blockquote><h2 id="dotnet-warp-安装使用" tabindex="-1"><a class="header-anchor" href="#dotnet-warp-安装使用"><span>dotnet-warp 安装使用</span></a></h2><blockquote><p>dotnet-warp 是一个全局的.NET Core 工具，允许将.NET Core 项目打包为单个可执行文件<br> 项目地址：https://github.com/Hubert-Rybak/dotnet-warp<br> 安装：<code>dotnet tool install --global dotnet-warp</code><br> 使用：在项目输出目录执行 <code>dotnet-warp</code> 即可将应用打包成一个exe文件 (支持：win-x64，linux-x64，osx-x64)</p></blockquote><figure><img src="'+i+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="nssm-安装使用" tabindex="-1"><a class="header-anchor" href="#nssm-安装使用"><span>NSSM 安装使用</span></a></h2><blockquote><p>NSSM 是一个服务封装程序，它可以方便的将 Exe 程序封装成 windows 服务运行 下载：<a href="https://nssm.cc/release/nssm-2.24.zip" target="_blank" rel="noopener noreferrer">nssm-2.24</a> 使用：下载后将对应版本拷贝到目标机器，然后命令行执行：<code>nssm install</code> 即可唤出可视化界面<br> 选择应用路径，有参数的添加参数，指定服务名称，指定执行用户,然后安装即可 安装成功别忘记启动：<code>nssm start 服务名称</code></p></blockquote><figure><img src="'+r+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+o+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>执行/运行 nssm 接口查看所有命令,根据所需执行对应的命令即可</p><figure><img src="'+l+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>简单的使用nssm编写一个服务安装脚本</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>@echo off</span></span>
<span class="line"><span>nssm stop xxxx</span></span>
<span class="line"><span>nssm remove xxxx confirm</span></span>
<span class="line"><span>nssm install xxxx D:\\Software\\xxxx\\xxxx.bat</span></span>
<span class="line"><span>nssm start xxxx</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="简单的给-asp-net-core项目传入监听端口" tabindex="-1"><a class="header-anchor" href="#简单的给-asp-net-core项目传入监听端口"><span>简单的给 asp .net core项目传入监听端口</span></a></h3><div class="language-charp line-numbers-mode" data-highlighter="shiki" data-ext="charp" data-title="charp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>public static IWebHostBuilder CreateWebHostBuilder(string[] args)</span></span>
<span class="line"><span>{</span></span>
<span class="line"><span>    List&lt;string&gt; urls = new List&lt;string&gt;();</span></span>
<span class="line"><span>    urls.Add(&quot;http://*:5454&quot;);//默认监听</span></span>
<span class="line"><span>    // --urls http://*:6060,https://*:2333</span></span>
<span class="line"><span>    var urlIndex = args.ToList().IndexOf(&quot;--urls&quot;);</span></span>
<span class="line"><span>    if (urlIndex &gt; -1 &amp;&amp; args.Length &gt; urlIndex + 1 &amp;&amp; !string.IsNullOrEmpty(args[urlIndex + 1]))</span></span>
<span class="line"><span>    {</span></span>
<span class="line"><span>        urls.AddRange(args[urlIndex + 1].Split(&#39;,&#39;));</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>    return WebHost.CreateDefaultBuilder(args)</span></span>
<span class="line"><span>            .UseUrls(urls.ToArray())</span></span>
<span class="line"><span>            .UseStartup&lt;Startup&gt;();</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="注意事项" tabindex="-1"><a class="header-anchor" href="#注意事项"><span>注意事项</span></a></h2><ul><li>wwwroot 文件夹需要手动拷贝</li><li>发布到 Windows7 时遇到的错误 <code>****/hostfxr.dll 找不到</code>，<a href="https://www.microsoft.com/en-us/download/details.aspx?id=26764" target="_blank" rel="noopener noreferrer">下载对应系统版本的 Windows6.1-KB2533623 补丁后重启即可</a></li></ul>`,16)]))}const h=n(p,[["render",d],["__file","dotnet_warp_nssm_deploy_net_core_item_windows_service.html.vue"]]),g=JSON.parse('{"path":"/posts/dotnetcore/dotnet_warp_nssm_deploy_net_core_item_windows_service.html","title":"dotnet-warp && NSSM 部署 .net core 项目到 windows 服务","lang":"zh-CN","frontmatter":{"title":"dotnet-warp && NSSM 部署 .net core 项目到 windows 服务","date":"2019-04-29T18:23:00.000Z","category":["DotNetCore"],"tag":[".net core"],"description":"如果你想将 .net core 项目以服务的形式部署到 windows 系统,希望本篇文章能够让你少走弯路 dotnet-warp 安装使用 dotnet-warp 是一个全局的.NET Core 工具，允许将.NET Core 项目打包为单个可执行文件 项目地址：https://github.com/Hubert-Rybak/dotnet-warp ...","head":[["meta",{"property":"og:url","content":"https://www.yimo.link/posts/dotnetcore/dotnet_warp_nssm_deploy_net_core_item_windows_service.html"}],["meta",{"property":"og:site_name","content":"易墨网"}],["meta",{"property":"og:title","content":"dotnet-warp && NSSM 部署 .net core 项目到 windows 服务"}],["meta",{"property":"og:description","content":"如果你想将 .net core 项目以服务的形式部署到 windows 系统,希望本篇文章能够让你少走弯路 dotnet-warp 安装使用 dotnet-warp 是一个全局的.NET Core 工具，允许将.NET Core 项目打包为单个可执行文件 项目地址：https://github.com/Hubert-Rybak/dotnet-warp ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-28T11:15:42.000Z"}],["meta",{"property":"article:tag","content":".net core"}],["meta",{"property":"article:published_time","content":"2019-04-29T18:23:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-10-28T11:15:42.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"dotnet-warp && NSSM 部署 .net core 项目到 windows 服务\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-04-29T18:23:00.000Z\\",\\"dateModified\\":\\"2024-10-28T11:15:42.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"易墨\\",\\"url\\":\\"https://www.yimo.link\\"}]}"]]},"headers":[{"level":2,"title":"dotnet-warp 安装使用","slug":"dotnet-warp-安装使用","link":"#dotnet-warp-安装使用","children":[]},{"level":2,"title":"NSSM 安装使用","slug":"nssm-安装使用","link":"#nssm-安装使用","children":[{"level":3,"title":"简单的给 asp .net core项目传入监听端口","slug":"简单的给-asp-net-core项目传入监听端口","link":"#简单的给-asp-net-core项目传入监听端口","children":[]}]},{"level":2,"title":"注意事项","slug":"注意事项","link":"#注意事项","children":[]}],"git":{"createdTime":1730114142000,"updatedTime":1730114142000,"contributors":[{"name":"yimo","email":"yimo@wikiglobal.com","commits":1}]},"readingTime":{"minutes":1.55,"words":465},"filePathRelative":"posts/dotnetcore/dotnet_warp_nssm_deploy_net_core_item_windows_service.md","localizedDate":"2019年4月29日","excerpt":"<blockquote>\\n<p>如果你想将 .net core 项目以服务的形式部署到 windows 系统,希望本篇文章能够让你少走弯路</p>\\n</blockquote>\\n<h2>dotnet-warp 安装使用</h2>\\n<blockquote>\\n<p>dotnet-warp 是一个全局的.NET Core 工具，允许将.NET Core 项目打包为单个可执行文件<br>\\n项目地址：https://github.com/Hubert-Rybak/dotnet-warp<br>\\n安装：<code>dotnet tool install --global dotnet-warp</code><br>\\n使用：在项目输出目录执行 <code>dotnet-warp</code> 即可将应用打包成一个exe文件 (支持：win-x64，linux-x64，osx-x64)</p>\\n</blockquote>","autoDesc":true}');export{h as comp,g as data};
