import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,g as o,o as i}from"./app-_tngh30b.js";const c="/assets/662652-20170927222519403-249482958-OS2cZTuP.png",p={};function d(a,e){return i(),n("div",null,e[0]||(e[0]=[o('<h2 id="_0-在asp-net-core中使用buildbundlerminifier合并压缩资源文件" tabindex="-1"><a class="header-anchor" href="#_0-在asp-net-core中使用buildbundlerminifier合并压缩资源文件"><span>0. 在asp.net core中使用BuildBundlerMinifier合并压缩资源文件</span></a></h2><blockquote><p>在asp.net mvc中可以使用Bundle来压缩合并css,js 不知道的见：http://www.cnblogs.com/morang/p/7207176.html</p></blockquote><blockquote><p>在asp.net core中则可以使用BuildBundlerMinifier来进行css，js的压缩合并</p></blockquote><blockquote><p>新建一个core项目可以看到一个根目录下面有一个<code>bundleconfig.json</code>配置文件，看名字大概也猜到了几分，点开json文件中的链接，果然就是它~</p></blockquote><p>官方文档地址：<a href="https://docs.microsoft.com/zh-cn/aspnet/core/client-side/bundling-and-minification" target="_blank" rel="noopener noreferrer">https://docs.microsoft.com/zh-cn/aspnet/core/client-side/bundling-and-minification</a></p><p>好的。接下来跟着文档试试看</p><h2 id="_1-在vs中下载安装扩展" tabindex="-1"><a class="header-anchor" href="#_1-在vs中下载安装扩展"><span>1. 在vs中下载安装扩展</span></a></h2><figure><img src="'+c+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>重启vs2017，卧槽。一遍又一遍无响应（家里公司电脑都没有成功~）..幸好还有其他路可以走...</p><figure><img src="https://dn-coding-net-production-pp.qbox.me/e57b7b5f-df5a-4b76-a253-640c822da0a9.png" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><h2 id="_2-使用nuget安装-buildbundlerminifier" tabindex="-1"><a class="header-anchor" href="#_2-使用nuget安装-buildbundlerminifier"><span>2. 使用NuGet安装 <code>BuildBundlerMinifier</code></span></a></h2><ul><li><p>使用命令<code>dotnet add package BuildBundlerMinifier</code> 或者 NuGet包管理器安装完毕</p></li><li><p>重新生成项目</p></li><li><p>yes，成功，整个配置文件的配置一看就能明白：结合图看配置就知道是将<code>inputFiles</code>配置的条目资源压缩合并成<code>outputFileName</code>的资源</p></li></ul><figure><img src="https://dn-coding-net-production-pp.qbox.me/9e20e775-c2e7-4429-96f6-8a81bc7d1936.png" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><h3 id="参数说明" tabindex="-1"><a class="header-anchor" href="#参数说明"><span>参数说明</span></a></h3><p>-<code>outputFileName</code>:要输出的压缩文件的相对路径。</p><pre><code>-必填
</code></pre><p>-<code>inputFiles</code>:要输出的压缩文件的相对路径。</p><pre><code>- 可选，为空则输出空文件

- 空值会在空的输出文件。 支持[组合模式](http://www.tldp.org/LDP/abs/html/globbingref.html)

- 组合模式 栗子：\`&quot;inputFiles&quot;: [&quot;wwwroot/**/*(*.css|!(*.min.css)&quot;]\` 将获取所有 CSS 文件，不包括缩减的文件模式。
</code></pre><p>-<code>minify</code>:压缩选项的配置</p><pre><code>- 默认启用压缩,更多配置见[BundlerMinifier-Wiki](https://github.com/madskristensen/BundlerMinifier/wiki)

- 可选
</code></pre><p>-<code>includeInProject</code>:将生成的文件添加到项目文件 (默认的文件中也没有这个选项)</p><pre><code>- 文档写的是 默认false，在vs中转到定义查看是true 。囧,默认是没有这个参数的
</code></pre><p>-<code>sourceMaps</code>:生成捆绑的文件的源映射</p><pre><code>-默认false
</code></pre><h2 id="_3-根据不同环境使用不同的css-js" tabindex="-1"><a class="header-anchor" href="#_3-根据不同环境使用不同的css-js"><span>3.根据不同环境使用不同的css/js</span></a></h2><p>使用新增的<code>environment</code>标签去根据不同的环境引入不同的css文件</p><figure><img src="https://dn-coding-net-production-pp.qbox.me/726fe159-5e07-4aa5-acef-d35599244b5f.png" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><p>ok，可以的，那么问题来了</p><h3 id="net-core的development-staging-production这几个环境变量在哪里配置呢" tabindex="-1"><a class="header-anchor" href="#net-core的development-staging-production这几个环境变量在哪里配置呢"><span>.net core的<code>Development</code>,<code>Staging</code>,<code>Production</code>这几个环境变量在哪里配置呢？</span></a></h3><blockquote><p>三个环境分别对应 开发 测试 生成，详情见文档(划重点)：<a href="https://docs.microsoft.com/zh-cn/aspnet/core/fundamentals/environments" target="_blank" rel="noopener noreferrer">https://docs.microsoft.com/zh-cn/aspnet/core/fundamentals/environments</a></p></blockquote><blockquote><p>简单描述之：项目右键-&gt;属性-&gt;调试-&gt;环境变量-&gt;&gt;&gt;一张图说明</p></blockquote><blockquote><figure><img src="https://dn-coding-net-production-pp.qbox.me/f9dea9d1-ebb0-4fc2-87c3-e03e5e812c1b.png" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure></blockquote><blockquote><p>然后发现原来调试信息什么的都是放到<code>launchSettings.json</code>中~</p></blockquote><blockquote><p>将环境变量<code>ASPNETCORE_ENVIRONMENT</code>的值修改为<code>Production</code>后，运行起来，总算完成了</p></blockquote><blockquote><figure><img src="https://dn-coding-net-production-pp.qbox.me/30c66355-7326-45c6-ad39-e4c06f6a358d.png" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure></blockquote><h4 id="文档中有说需要注意的地方" tabindex="-1"><a class="header-anchor" href="#文档中有说需要注意的地方"><span>文档中有说需要注意的地方</span></a></h4><blockquote><p>在 Windows 和 macOS 上，指定的环境名称是区分大小写。</p></blockquote><blockquote><p>是否将变量设置为Development或development或DEVELOPMENT结果将是相同的。但是，Linux 是区分大小写默认情况下的操作系统。环境变量、文件名和设置需要区分大小写。</p></blockquote><h4 id="命令行设置环境变量" tabindex="-1"><a class="header-anchor" href="#命令行设置环境变量"><span>命令行设置环境变量</span></a></h4><ul><li><p>cmd:<code>set ASPNETCORE_ENVIRONMENT=Development</code></p></li><li><p>PowerShell:<code>$Env:ASPNETCORE_ENVIRONMENT = &quot;Development&quot;</code></p></li><li><p>macOS、Linux:运行时指定<code>ASPNETCORE_ENVIRONMENT=Development dotnet run</code></p></li><li><p>linux 设置计算机级别的环境变量需将<code>export ASPNETCORE_ENVIRONMENT=Development</code>写入.bashrc或.bash_profile文件</p></li></ul><h3 id="在关于环境变量的底部也说明了如何获取当前的运行时环境" tabindex="-1"><a class="header-anchor" href="#在关于环境变量的底部也说明了如何获取当前的运行时环境"><span>在关于环境变量的底部也说明了如何获取当前的运行时环境</span></a></h3><p>可通过<code>IHostingEnvironment</code>接口的扩展直接判断环境</p><figure><img src="https://dn-coding-net-production-pp.qbox.me/c5066bb7-5f73-4ada-9419-de8cd20271d6.png" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><p>使用</p><figure><img src="https://dn-coding-net-production-pp.qbox.me/208a23b9-f819-49bd-aa63-5e0facdf5e26.png" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h2><blockquote><p>收获颇多,明确了目标，之前模糊畏难的东西也逐个解决了</p></blockquote><ul><li><p>.net core 如何合并压缩js</p></li><li><p>.net core 如何在不同的环境使用不同的资源</p></li><li><p>.net core的环境变量如何配置</p></li></ul><h3 id="参考文档" tabindex="-1"><a class="header-anchor" href="#参考文档"><span>参考文档</span></a></h3><ul><li><p>.net core 环境变量的说明：https://docs.microsoft.com/zh-cn/aspnet/core/fundamentals/environments</p></li><li><p>asp.net core 压缩合并：https://docs.microsoft.com/zh-cn/aspnet/core/client-side/bundling-and-minification</p></li></ul>`,50)]))}const s=t(p,[["render",d],["__file","asp_net_core_merge_compress_assets_document_trigger_study_a_trip_to.html.vue"]]),u=JSON.parse('{"path":"/posts/dotnetcore/asp_net_core_merge_compress_assets_document_trigger_study_a_trip_to.html","title":"asp.net core合并压缩资源文件引发的学习之旅","lang":"zh-CN","frontmatter":{"title":"asp.net core合并压缩资源文件引发的学习之旅","date":"2017-09-28T00:29:00.000Z","category":["DotNetCore"],"description":"0. 在asp.net core中使用BuildBundlerMinifier合并压缩资源文件 在asp.net mvc中可以使用Bundle来压缩合并css,js 不知道的见：http://www.cnblogs.com/morang/p/7207176.html 在asp.net core中则可以使用BuildBundlerMinifier来进行c...","head":[["meta",{"property":"og:url","content":"https://www.yimo.link/posts/dotnetcore/asp_net_core_merge_compress_assets_document_trigger_study_a_trip_to.html"}],["meta",{"property":"og:site_name","content":"易墨网"}],["meta",{"property":"og:title","content":"asp.net core合并压缩资源文件引发的学习之旅"}],["meta",{"property":"og:description","content":"0. 在asp.net core中使用BuildBundlerMinifier合并压缩资源文件 在asp.net mvc中可以使用Bundle来压缩合并css,js 不知道的见：http://www.cnblogs.com/morang/p/7207176.html 在asp.net core中则可以使用BuildBundlerMinifier来进行c..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://dn-coding-net-production-pp.qbox.me/e57b7b5f-df5a-4b76-a253-640c822da0a9.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-28T11:15:42.000Z"}],["meta",{"property":"article:published_time","content":"2017-09-28T00:29:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-10-28T11:15:42.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"asp.net core合并压缩资源文件引发的学习之旅\\",\\"image\\":[\\"https://dn-coding-net-production-pp.qbox.me/e57b7b5f-df5a-4b76-a253-640c822da0a9.png\\",\\"https://dn-coding-net-production-pp.qbox.me/9e20e775-c2e7-4429-96f6-8a81bc7d1936.png\\",\\"https://dn-coding-net-production-pp.qbox.me/726fe159-5e07-4aa5-acef-d35599244b5f.png\\",\\"https://dn-coding-net-production-pp.qbox.me/f9dea9d1-ebb0-4fc2-87c3-e03e5e812c1b.png\\",\\"https://dn-coding-net-production-pp.qbox.me/30c66355-7326-45c6-ad39-e4c06f6a358d.png\\",\\"https://dn-coding-net-production-pp.qbox.me/c5066bb7-5f73-4ada-9419-de8cd20271d6.png\\",\\"https://dn-coding-net-production-pp.qbox.me/208a23b9-f819-49bd-aa63-5e0facdf5e26.png\\"],\\"datePublished\\":\\"2017-09-28T00:29:00.000Z\\",\\"dateModified\\":\\"2024-10-28T11:15:42.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"易墨\\",\\"url\\":\\"https://www.yimo.link\\"}]}"]]},"headers":[{"level":2,"title":"0. 在asp.net core中使用BuildBundlerMinifier合并压缩资源文件","slug":"_0-在asp-net-core中使用buildbundlerminifier合并压缩资源文件","link":"#_0-在asp-net-core中使用buildbundlerminifier合并压缩资源文件","children":[]},{"level":2,"title":"1. 在vs中下载安装扩展","slug":"_1-在vs中下载安装扩展","link":"#_1-在vs中下载安装扩展","children":[]},{"level":2,"title":"2. 使用NuGet安装 BuildBundlerMinifier","slug":"_2-使用nuget安装-buildbundlerminifier","link":"#_2-使用nuget安装-buildbundlerminifier","children":[{"level":3,"title":"参数说明","slug":"参数说明","link":"#参数说明","children":[]}]},{"level":2,"title":"3.根据不同环境使用不同的css/js","slug":"_3-根据不同环境使用不同的css-js","link":"#_3-根据不同环境使用不同的css-js","children":[{"level":3,"title":".net core的Development,Staging,Production这几个环境变量在哪里配置呢？","slug":"net-core的development-staging-production这几个环境变量在哪里配置呢","link":"#net-core的development-staging-production这几个环境变量在哪里配置呢","children":[{"level":4,"title":"文档中有说需要注意的地方","slug":"文档中有说需要注意的地方","link":"#文档中有说需要注意的地方","children":[]},{"level":4,"title":"命令行设置环境变量","slug":"命令行设置环境变量","link":"#命令行设置环境变量","children":[]}]},{"level":3,"title":"在关于环境变量的底部也说明了如何获取当前的运行时环境","slug":"在关于环境变量的底部也说明了如何获取当前的运行时环境","link":"#在关于环境变量的底部也说明了如何获取当前的运行时环境","children":[]}]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[{"level":3,"title":"参考文档","slug":"参考文档","link":"#参考文档","children":[]}]}],"git":{"createdTime":1730114142000,"updatedTime":1730114142000,"contributors":[{"name":"yimo","email":"yimo@wikiglobal.com","commits":1}]},"readingTime":{"minutes":3.32,"words":996},"filePathRelative":"posts/dotnetcore/asp_net_core_merge_compress_assets_document_trigger_study_a_trip_to.md","localizedDate":"2017年9月28日","excerpt":"<h2>0. 在asp.net core中使用BuildBundlerMinifier合并压缩资源文件</h2>\\n<blockquote>\\n<p>在asp.net mvc中可以使用Bundle来压缩合并css,js 不知道的见：http://www.cnblogs.com/morang/p/7207176.html</p>\\n</blockquote>\\n<blockquote>\\n<p>在asp.net core中则可以使用BuildBundlerMinifier来进行css，js的压缩合并</p>\\n</blockquote>\\n<blockquote>\\n<p>新建一个core项目可以看到一个根目录下面有一个<code>bundleconfig.json</code>配置文件，看名字大概也猜到了几分，点开json文件中的链接，果然就是它~</p>\\n</blockquote>","autoDesc":true}');export{s as comp,u as data};
