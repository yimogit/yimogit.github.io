import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,e as n,o as s}from"./app-f_uNzTRF.js";const t="/assets/662652-20230821212011841-586501997-B9pjBDFp.png",a="/assets/662652-20230821210255667-931392843-BkBBl9c-.png",p={};function o(r,i){return s(),e("div",null,i[0]||(i[0]=[n('<h2 id="中台框架前台项目-admin-ui-plus-的初识" tabindex="-1"><a class="header-anchor" href="#中台框架前台项目-admin-ui-plus-的初识"><span>中台框架前台项目 admin.ui.plus 的初识</span></a></h2><blockquote><p>基于 vue3.x + CompositionAPI setup 语法糖 + typescript + vite + element plus + vue-router-next + pinia 技术，内置支持一键生成微服务接口，适配手机、平板、pc 的后台权限管理框架，希望减少工作量，帮助大家实现快速开发。</p></blockquote><ul><li><p>框架一览 <img src="'+t+`" alt="" loading="lazy"></p></li><li><p>项目地址</p><ul><li>https://github.com/zhontai/admin.ui.plus</li></ul></li><li><p>技术栈</p><ul><li>node 16+</li><li>vue 3.x</li><li>typescript</li><li>element plus</li></ul></li><li><p>特点</p><ul><li>界面还可以，自定义度高，适配移动端</li><li>自动生成api接口定义文件</li><li>没有过度封装</li><li>系统权限封装基本满足大部分项目</li></ul></li><li><p>推荐环境</p><ul><li>Node v18</li><li>VsCode</li><li>VsCode插件 <ul><li>TypeScript Vue Plugin (Volar)</li><li>Vue Language Features (Volar)</li><li>Vue 3 Snippets</li><li>ESLint</li><li>Prettier - Code formatter</li></ul></li></ul></li><li><p>项目结构</p><ul><li><code>bin</code> 打包脚本</li><li><code>gen</code> 根据./templates生成api相关文件，接口更新后执行<code>npm run gen:api</code>会生成接口的定义和接口模型</li><li><code>public</code> 不需要打包的资源</li><li><code>src</code> 源码，vue项目结构，具体文档参考<a href="https://github.com/lyt-Top/vue-next-admin" target="_blank" rel="noopener noreferrer">vue-next-admin</a>，<a href="https://element-plus.gitee.io/zh-CN/component/button.html" target="_blank" rel="noopener noreferrer">element-plus</a></li><li>package.json script <ul><li><code>npm run dev</code> 运行</li><li><code>npm run build</code> 打包</li><li><code>npm run gen:api</code> 生成api代码，添加了模块后加入到apis中</li></ul></li></ul></li></ul><h3 id="默认实现功能" tabindex="-1"><a class="header-anchor" href="#默认实现功能"><span>默认实现功能</span></a></h3><ol><li>用户管理：配置用户，查看部门用户列表，支持禁用/启用、重置密码、设置主管、用户可配置多角色、多部门和上级主管。</li><li>角色管理：配置角色，支持角色分组、设置角色菜单和数据权限、批量添加和移除角色员工。</li><li>部门管理：配置部门，支持树形列表展示。</li><li>权限管理：配置分组、菜单、操作、权限点、权限标识，支持树形列表展示。</li><li>租户套餐：配置租户套餐，支持新增/移除套餐企业。</li><li>租户管理：配置租户，新增租户时初始化部门、角色和管理员数据，支持租户配置套餐、禁用/启用功能。</li><li>字典管理：配置字典，查看字典类型和字典数据列表，支持字典类型和字典数据维护。</li><li>任务调度：查看任务和任务日志列表，支持任务启动、执行、暂停等功能。</li><li>缓存管理：缓存列表查询，支持根据缓存键清除缓存</li><li>接口管理：配置接口，支持接口同步功能，用于新增权限点选择接口，支持树形列表展示。</li><li>视图管理：配置视图，支持视图维护功能，用于新增菜单选择视图，支持树形列表展示。</li><li>文件管理：支持文件列表查询、文件上传/下载、查看大图、复制文件地址、删除文件功能。</li><li>登录日志：登录日志列表查询，记录用户登录成功和失败日志。</li><li>操作日志：操作日志列表查询，记录用户操作正常和异常日志。</li></ol><h3 id="框架的使用" tabindex="-1"><a class="header-anchor" href="#框架的使用"><span>框架的使用</span></a></h3><h4 id="_1-从github-克隆-下载项目" tabindex="-1"><a class="header-anchor" href="#_1-从github-克隆-下载项目"><span>1. 从GitHub 克隆/下载项目</span></a></h4><ul><li>前端：<code>git clone https://github.com/zhontai/admin.ui.plus.git</code></li><li>后端：<code>git clone https://github.com/zhontai/Admin.Core.git</code></li></ul><h4 id="_2-启动运行" tabindex="-1"><a class="header-anchor" href="#_2-启动运行"><span>2. 启动运行</span></a></h4><p>安装好nodejs18+,vscode，执行 <code>npm i</code> &amp;&amp; <code>npm run dev</code> 运行即可<br> 启动地址：http://localhost:8100<br> 默认会跳转到登录页，账号密码 admin 111111 会自动赋值<br> 后台 ZhonTai.Host 接口运行起来，登录无阻碍</p><h4 id="_3-修改事项" tabindex="-1"><a class="header-anchor" href="#_3-修改事项"><span>3. 修改事项</span></a></h4><ul><li>修改系统名称 <ul><li>需要修改的文件</li><li>index.html</li><li>src/layout/footer/index.vue</li><li>src/layout/stores/themeConfig.ts</li></ul></li><li>更新logo <ul><li>可以从<a href="https://www.iconfont.cn/" target="_blank" rel="noopener noreferrer">iconfont</a>字体网站找个字体文件当logo,然后再前往<a href="https://icon.wuruihong.com/tools" target="_blank" rel="noopener noreferrer">图标工场</a>生成需要的图片</li></ul></li><li>更新api接口 <ul><li>使用 <code>npm run gen:api</code> 生成，将会根据接口文档生成对应的模型，接口ts文件</li><li>如果加了新的模块，配置 /gen/gen-api.js 中的apis即可<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> apis</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        output</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">resolve</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">__dirname</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;../src/api/admin&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">),</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        url</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;http://localhost:8000/admin/swagger/admin/swagger.json&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    },</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    //添加模块 dev</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        output</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">resolve</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">__dirname</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;../src/api/dev&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">),</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        url</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;http://localhost:8000/admin/swagger/dev/swagger.json&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li>平台管理-系统管理-视图管理 <ul><li>视图配置对应vue视图文件地址，权限菜单配置路由，路由对应跳转到视图</li><li>views模块正常添加文件copy其他的页面即可</li></ul></li><li>平台管理-权限管理-权限管理(菜单) <ul><li>对应vue的路由配置，后台返回，前台动态加载</li></ul></li><li>平台管理-系统管理-接口管理-同步，将接口定义写入到数据库，用于指定页面权限及按钮权限的控制</li><li>新增一个模块页面的步骤 <ul><li>在项目中添加视图文件，如 /views/admin/test/index.vue</li><li>在视图管理中添加视图，配置为新增视图的信息 视图名称：admin/test 视图地址：admin/test/index</li><li>新增权限，分组(一级导航)，菜单(下级导航)，权限点 ，分组和菜单的路由地址不能一致，路由前缀也需要一致切换菜单时才能准确定位菜单</li><li>测试菜单：路由地址：/platform/test/index 视图地址：选择admin/test/index <img src="`+a+'" alt="" loading="lazy"></li></ul></li></ul><h4 id="_4-代码生成" tabindex="-1"><a class="header-anchor" href="#_4-代码生成"><span>4. 代码生成</span></a></h4><ul><li>后端：https://github.com/share36/Admin.Core.Dev</li><li>前端：https://github.com/share36/admin.ui.plus.dev</li></ul><p>代码生成的使用见下篇</p>',15)]))}const u=l(p,[["render",o],["__file","zhontai_admin_core_book_02.html.vue"]]),c=JSON.parse('{"path":"/posts/admincore/zhontai_admin_core_book_02.html","title":"02.前后端分离中台框架前端 admin.ui.plus 学习-介绍与简单使用","lang":"zh-CN","frontmatter":{"title":"02.前后端分离中台框架前端 admin.ui.plus 学习-介绍与简单使用","date":"2023-08-21T21:06:00.000Z","category":["DotNetCore"],"tag":["vue","zhontai"],"description":"中台框架前台项目 admin.ui.plus 的初识 基于 vue3.x + CompositionAPI setup 语法糖 + typescript + vite + element plus + vue-router-next + pinia 技术，内置支持一键生成微服务接口，适配手机、平板、pc 的后台权限管理框架，希望减少工作量，帮助大家实现...","head":[["meta",{"property":"og:url","content":"https://www.yimo.link/posts/admincore/zhontai_admin_core_book_02.html"}],["meta",{"property":"og:site_name","content":"易墨网"}],["meta",{"property":"og:title","content":"02.前后端分离中台框架前端 admin.ui.plus 学习-介绍与简单使用"}],["meta",{"property":"og:description","content":"中台框架前台项目 admin.ui.plus 的初识 基于 vue3.x + CompositionAPI setup 语法糖 + typescript + vite + element plus + vue-router-next + pinia 技术，内置支持一键生成微服务接口，适配手机、平板、pc 的后台权限管理框架，希望减少工作量，帮助大家实现..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-29T02:56:06.000Z"}],["meta",{"property":"article:tag","content":"vue"}],["meta",{"property":"article:tag","content":"zhontai"}],["meta",{"property":"article:published_time","content":"2023-08-21T21:06:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-10-29T02:56:06.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"02.前后端分离中台框架前端 admin.ui.plus 学习-介绍与简单使用\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-08-21T21:06:00.000Z\\",\\"dateModified\\":\\"2024-10-29T02:56:06.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"易墨\\",\\"url\\":\\"https://www.yimo.link\\"}]}"]]},"headers":[{"level":2,"title":"中台框架前台项目 admin.ui.plus 的初识","slug":"中台框架前台项目-admin-ui-plus-的初识","link":"#中台框架前台项目-admin-ui-plus-的初识","children":[{"level":3,"title":"默认实现功能","slug":"默认实现功能","link":"#默认实现功能","children":[]},{"level":3,"title":"框架的使用","slug":"框架的使用","link":"#框架的使用","children":[{"level":4,"title":"1. 从GitHub 克隆/下载项目","slug":"_1-从github-克隆-下载项目","link":"#_1-从github-克隆-下载项目","children":[]},{"level":4,"title":"2. 启动运行","slug":"_2-启动运行","link":"#_2-启动运行","children":[]},{"level":4,"title":"3. 修改事项","slug":"_3-修改事项","link":"#_3-修改事项","children":[]},{"level":4,"title":"4. 代码生成","slug":"_4-代码生成","link":"#_4-代码生成","children":[]}]}]}],"git":{"createdTime":1730114142000,"updatedTime":1730170566000,"contributors":[{"name":"yimo","email":"yimo@wikiglobal.com","commits":2}]},"readingTime":{"minutes":4.24,"words":1272},"filePathRelative":"posts/admincore/zhontai_admin_core_book_02.md","localizedDate":"2023年8月21日","excerpt":"<h2>中台框架前台项目 admin.ui.plus 的初识</h2>\\n<blockquote>\\n<p>基于 vue3.x + CompositionAPI setup 语法糖 + typescript + vite + element plus + vue-router-next + pinia 技术，内置支持一键生成微服务接口，适配手机、平板、pc 的后台权限管理框架，希望减少工作量，帮助大家实现快速开发。</p>\\n</blockquote>\\n<ul>\\n<li>\\n<p>框架一览\\n</p>\\n</li>\\n<li>\\n<p>项目地址</p>\\n<ul>\\n<li>https://github.com/zhontai/admin.ui.plus</li>\\n</ul>\\n</li>\\n<li>\\n<p>技术栈</p>\\n<ul>\\n<li>node&nbsp;16+</li>\\n<li>vue 3.x</li>\\n<li>typescript</li>\\n<li>element plus</li>\\n</ul>\\n</li>\\n<li>\\n<p>特点</p>\\n<ul>\\n<li>界面还可以，自定义度高，适配移动端</li>\\n<li>自动生成api接口定义文件</li>\\n<li>没有过度封装</li>\\n<li>系统权限封装基本满足大部分项目</li>\\n</ul>\\n</li>\\n<li>\\n<p>推荐环境</p>\\n<ul>\\n<li>Node v18</li>\\n<li>VsCode</li>\\n<li>VsCode插件\\n<ul>\\n<li>TypeScript Vue Plugin (Volar)</li>\\n<li>Vue Language Features (Volar)</li>\\n<li>Vue 3 Snippets</li>\\n<li>ESLint</li>\\n<li>Prettier - Code formatter</li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n<li>\\n<p>项目结构</p>\\n<ul>\\n<li><code>bin</code> 打包脚本</li>\\n<li><code>gen</code> 根据./templates生成api相关文件，接口更新后执行<code>npm run gen:api</code>会生成接口的定义和接口模型</li>\\n<li><code>public</code> 不需要打包的资源</li>\\n<li><code>src</code> 源码，vue项目结构，具体文档参考<a href=\\"https://github.com/lyt-Top/vue-next-admin\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">vue-next-admin</a>，<a href=\\"https://element-plus.gitee.io/zh-CN/component/button.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">element-plus</a></li>\\n<li>package.json script\\n<ul>\\n<li><code>npm run dev</code> 运行</li>\\n<li><code>npm run build</code> 打包</li>\\n<li><code>npm run gen:api</code> 生成api代码，添加了模块后加入到apis中</li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true}');export{u as comp,c as data};
