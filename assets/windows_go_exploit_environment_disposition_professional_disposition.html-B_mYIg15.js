import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,e as n,a as o,o as a}from"./app-CzakNbIb.js";const l={};function p(t,e){return a(),s("div",null,[e[0]||(e[0]=n('<p>本文主要内容如下几点：</p><ol><li><p>下载安装GO</p></li><li><p>配置多个工作区,第一个默认放第三方包，其他的放项目代码</p></li><li><p>包管理器<code>godep</code>的安装使用</p></li><li><p>安装过程中的一些坑(墙)</p></li><li><p>vscode中使用go</p></li></ol><h2 id="_1-下载并安装go" tabindex="-1"><a class="header-anchor" href="#_1-下载并安装go"><span>1. 下载并安装<code>go</code></span></a></h2><p><a href="https://golang.org/dl/" target="_blank" rel="noopener noreferrer">官网下载</a> 或者<a href="https://www.golangtc.com/download" target="_blank" rel="noopener noreferrer">golang中国下载</a></p><p>默认安装到<code>C:\\GO</code>,使用<code>go version</code>查看版本：</p><figure><img src="https://dn-coding-net-production-pp.qbox.me/27eb4c4e-cf4b-4e8b-8536-38e9a46743e6.png" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><p>当前版本为：<a href="https://dl.google.com/go/go1.10.windows-amd64.msi" target="_blank" rel="noopener noreferrer">1.10</a></p><h2 id="_2-新建工作区" tabindex="-1"><a class="header-anchor" href="#_2-新建工作区"><span>2. 新建工作区</span></a></h2><figure><img src="https://dn-coding-net-production-pp.qbox.me/24fd84e8-9835-4d41-893a-91fa557f1335.png" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><ol><li><p>新建两个文件夹</p><p>DepSource\\src:放置go依赖包的源代码</p><p>GoCoding\\src:放置自己或者测试项目的代码目录</p></li><li><p>将这两个文件夹的路径以及对应的bin按顺序配置到环境变量<code>GOPATH</code>中,新建系统变量GOPATH，然后值为：<code>C:\\GoWorks\\DepSource;C:\\GoWorks\\GoCoding;C:\\GoWorks\\DepSource\\bin;C:\\GoWorks\\GoCoding\\bin;</code> 盘符请自行修改</p></li><li><p>将<code>%GOPATH%</code>配置到系统变量<code>path</code>中</p></li></ol>',10)),o("more"),e[1]||(e[1]=n(`<hr><p>在家里面电脑重新配置了下,Go安装在了D盘,GOPATH配置到了E盘，如下图所示</p><ul><li>文件夹</li></ul><figure><img src="https://dn-coding-net-production-pp.qbox.me/62c465c0-642e-429e-9f61-f97fe8dcbefb.png" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><ul><li>环境变量</li></ul><figure><img src="https://dn-coding-net-production-pp.qbox.me/374abe7f-2aef-4f6d-b4a0-08b82c1a9d08.png" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><h2 id="_3-安装包管理器godep" tabindex="-1"><a class="header-anchor" href="#_3-安装包管理器godep"><span>3. 安装包管理器<code>godep</code></span></a></h2><h3 id="_3-1-下载" tabindex="-1"><a class="header-anchor" href="#_3-1-下载"><span>3.1 下载</span></a></h3><ol><li><p>获取godep包：<code>go get -v github.com/tools/godep</code> -v 显示日志输出 -u 更新到最新版本</p></li><li><p>下载完成后查看<code>C:\\GoWorks\\DepSource\\bin\\godep.exe</code>是否存在godep.exe,有则安装成功</p></li><li><p>根据<code>Godeps\\Godeps.json</code>配置还原依赖包</p></li></ol><blockquote><p>如果项目中有<code>Godeps\\Godeps.json</code>,则可以使用<code>godep get</code>安装所需依赖包</p></blockquote><h3 id="_3-2-生成go项目的依赖配置文件" tabindex="-1"><a class="header-anchor" href="#_3-2-生成go项目的依赖配置文件"><span>3.2 生成go项目的依赖配置文件</span></a></h3><ol><li><p>新建一个go项目oneGo(GoCoding\\src\\oneGO),创建<code>main.go</code>文件，并引入一个测试包，并打开cmd到当前路径</p><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">package</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> main</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    test</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;github.com/yimogit/gotest&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">func</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    test</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">HelloWord</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>安装测试的包:<code>go get -v github.com/yimogit/gotest</code></p></li><li><p>构建依赖配置：<code>godep save</code></p></li><li><p>success，若成功则看到oneGo文件夹下生成了<code>Godeps，vendor</code>文件夹</p></li><li><p>运行：<code>go run main.go</code>,则控制台输出<code>Hello Word</code></p></li><li><p>打包exe则使用 <code>go build -o test.exe</code></p></li></ol><h2 id="_4-在安装go框架gin的时候会有一些依赖包需要手动安装一些包" tabindex="-1"><a class="header-anchor" href="#_4-在安装go框架gin的时候会有一些依赖包需要手动安装一些包"><span>4.在安装go框架gin的时候会有一些依赖包需要手动安装一些包</span></a></h2><p>开始执行<code>godep save</code>构建依赖配置文件,第一次使用这个命令的话会报一堆缺少<code>github.com/*/*</code>包的错误，安装即可 <a href="https://dn-coding-net-production-pp.qbox.me/4ab0bba6-ca7f-4d2c-bd15-5beb428efd28.png" target="_blank" rel="noopener noreferrer">错误图一览</a></p><p>当遇到<code>godep: Package (golang.org/x/sys/unix) not found</code>，即从golang.org下载包失败的时候(如果你能成功算我没说)，需要改变路径从GitHub去下载(墙了，然后go在GitHub放了一份~)</p><p>具体解决方案为：</p><p>在之前设置的GOPATH路径(C:\\GoWorks\\DepSource\\src)新建<code>golang.org\\x</code>文件夹，然后<a href="https://github.com/golang/sys" target="_blank" rel="noopener noreferrer">克隆或者下载sys包</a></p><p>完整命令(自行修改路径)：<code>git clone https://github.com/golang/sys.git C:\\GoWorks\\DepSource\\src\\golang.org\\x\\sys</code></p><p>在安装过程若出现包下载失败的情况可以直接使用clone命令下载到github.com文件夹，然后执行<code>go get github.com/x/x</code>就能够安装了</p><h2 id="_5-vscode中使用需要安装的依赖包" tabindex="-1"><a class="header-anchor" href="#_5-vscode中使用需要安装的依赖包"><span>5. vscode中使用需要安装的依赖包</span></a></h2><p>安装扩展：<a href="https://github.com/microsoft/vscode-go" target="_blank" rel="noopener noreferrer">vscode-go</a></p><p>安装依赖：可以根据vscode的提示或者直接安装下面这些依赖包,更多介绍可参考<a href="https://www.cnblogs.com/zsy/archive/2016/02/28/5223957.html" target="_blank" rel="noopener noreferrer">VsCode中配置GO开发环境</a></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>go get -u -v github.com/nsf/gocode      </span></span>
<span class="line"><span></span></span>
<span class="line"><span>go get -u -v github.com/rogpeppe/godef      </span></span>
<span class="line"><span></span></span>
<span class="line"><span>go get -u -v github.com/golang/lint/golint   </span></span>
<span class="line"><span></span></span>
<span class="line"><span>go get -u -v github.com/lukehoban/go-find-references   </span></span>
<span class="line"><span></span></span>
<span class="line"><span>go get -u -v github.com/lukehoban/go-outline        </span></span>
<span class="line"><span></span></span>
<span class="line"><span>go get -u -v sourcegraph.com/sqs/goreturns          </span></span>
<span class="line"><span></span></span>
<span class="line"><span>go get -u -v github.com/tpng/gopkgs     </span></span>
<span class="line"><span></span></span>
<span class="line"><span>go get -u -v github.com/newhook/go-symbols      </span></span>
<span class="line"><span></span></span>
<span class="line"><span>go get -u -v github.com/peterh/liner </span></span>
<span class="line"><span></span></span>
<span class="line"><span>go get -u -v github.com/derekparker/delve/cmd/dlv</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,23))])}const c=i(l,[["render",p],["__file","windows_go_exploit_environment_disposition_professional_disposition.html.vue"]]),g=JSON.parse('{"path":"/posts/developer/windows_go_exploit_environment_disposition_professional_disposition.html","title":"Windows下GO的开发环境配置及多工作区配置","lang":"zh-CN","frontmatter":{"title":"Windows下GO的开发环境配置及多工作区配置","date":"2018-03-17T10:53:00.000Z","category":["Developer"],"tag":["go"],"description":"本文主要内容如下几点： 下载安装GO 配置多个工作区,第一个默认放第三方包，其他的放项目代码 包管理器godep的安装使用 安装过程中的一些坑(墙) vscode中使用go 1. 下载并安装go 官网下载 或者golang中国下载 默认安装到C:\\\\GO,使用go version查看版本： 图片图片 当前版本为：1.10 2. 新建工作区 图片图片 新建...","head":[["meta",{"property":"og:url","content":"https://www.yimo.link/posts/developer/windows_go_exploit_environment_disposition_professional_disposition.html"}],["meta",{"property":"og:site_name","content":"易墨网"}],["meta",{"property":"og:title","content":"Windows下GO的开发环境配置及多工作区配置"}],["meta",{"property":"og:description","content":"本文主要内容如下几点： 下载安装GO 配置多个工作区,第一个默认放第三方包，其他的放项目代码 包管理器godep的安装使用 安装过程中的一些坑(墙) vscode中使用go 1. 下载并安装go 官网下载 或者golang中国下载 默认安装到C:\\\\GO,使用go version查看版本： 图片图片 当前版本为：1.10 2. 新建工作区 图片图片 新建..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://dn-coding-net-production-pp.qbox.me/27eb4c4e-cf4b-4e8b-8536-38e9a46743e6.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-28T11:15:42.000Z"}],["meta",{"property":"article:tag","content":"go"}],["meta",{"property":"article:published_time","content":"2018-03-17T10:53:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-10-28T11:15:42.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Windows下GO的开发环境配置及多工作区配置\\",\\"image\\":[\\"https://dn-coding-net-production-pp.qbox.me/27eb4c4e-cf4b-4e8b-8536-38e9a46743e6.png\\",\\"https://dn-coding-net-production-pp.qbox.me/24fd84e8-9835-4d41-893a-91fa557f1335.png\\",\\"https://dn-coding-net-production-pp.qbox.me/62c465c0-642e-429e-9f61-f97fe8dcbefb.png\\",\\"https://dn-coding-net-production-pp.qbox.me/374abe7f-2aef-4f6d-b4a0-08b82c1a9d08.png\\"],\\"datePublished\\":\\"2018-03-17T10:53:00.000Z\\",\\"dateModified\\":\\"2024-10-28T11:15:42.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"易墨\\",\\"url\\":\\"https://www.yimo.link\\"}]}"]]},"headers":[{"level":2,"title":"1. 下载并安装go","slug":"_1-下载并安装go","link":"#_1-下载并安装go","children":[]},{"level":2,"title":"2. 新建工作区","slug":"_2-新建工作区","link":"#_2-新建工作区","children":[]},{"level":2,"title":"3. 安装包管理器godep","slug":"_3-安装包管理器godep","link":"#_3-安装包管理器godep","children":[{"level":3,"title":"3.1 下载","slug":"_3-1-下载","link":"#_3-1-下载","children":[]},{"level":3,"title":"3.2 生成go项目的依赖配置文件","slug":"_3-2-生成go项目的依赖配置文件","link":"#_3-2-生成go项目的依赖配置文件","children":[]}]},{"level":2,"title":"4.在安装go框架gin的时候会有一些依赖包需要手动安装一些包","slug":"_4-在安装go框架gin的时候会有一些依赖包需要手动安装一些包","link":"#_4-在安装go框架gin的时候会有一些依赖包需要手动安装一些包","children":[]},{"level":2,"title":"5. vscode中使用需要安装的依赖包","slug":"_5-vscode中使用需要安装的依赖包","link":"#_5-vscode中使用需要安装的依赖包","children":[]}],"git":{"createdTime":1730114142000,"updatedTime":1730114142000,"contributors":[{"name":"yimo","email":"yimo@wikiglobal.com","commits":1}]},"readingTime":{"minutes":3.07,"words":921},"filePathRelative":"posts/developer/windows_go_exploit_environment_disposition_professional_disposition.md","localizedDate":"2018年3月17日","excerpt":"<p>本文主要内容如下几点：</p>\\n<ol>\\n<li>\\n<p>下载安装GO</p>\\n</li>\\n<li>\\n<p>配置多个工作区,第一个默认放第三方包，其他的放项目代码</p>\\n</li>\\n<li>\\n<p>包管理器<code>godep</code>的安装使用</p>\\n</li>\\n<li>\\n<p>安装过程中的一些坑(墙)</p>\\n</li>\\n<li>\\n<p>vscode中使用go</p>\\n</li>\\n</ol>\\n<h2>1. 下载并安装<code>go</code></h2>\\n<p><a href=\\"https://golang.org/dl/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">官网下载</a> 或者<a href=\\"https://www.golangtc.com/download\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">golang中国下载</a></p>","autoDesc":true}');export{c as comp,g as data};
