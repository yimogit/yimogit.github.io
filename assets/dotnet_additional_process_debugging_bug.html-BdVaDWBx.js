import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,e as a,o as s}from"./app-BHZ56IUu.js";const i="/assets/662652-20190827222445720-832776543-D7cB59HD.png",p="/assets/662652-20190828004720762-304533696-DvkZCIQE.png",r={};function l(o,e){return s(),t("div",null,e[0]||(e[0]=[a('<p>在将项目升级到 asp.net core 2.2 后,很少使用 IIS Express 运行项目了，基本都是控制台运行或者写个脚本批量启动要运行的接口(多个输出项目)，一直以为是我机器的 bug</p><p>关于 vs 的 asp.net core 进程调试的这个问题困扰了我好一段时间未曾解决，得空整理记录一下。</p><h2 id="问题描述" tabindex="-1"><a class="header-anchor" href="#问题描述"><span>问题描述</span></a></h2><p>一顿操作猛如虎运行 <code>dotnet run</code> 很多个应用程序(前后端分离，多个项目运行的场景)</p><p>然后打开项目选择【调试-附加到进程】(<code>.net framework 要附加到 w3wp.exe,.net core 要附加到 dotnet.exe</code>)</p><p>看到这一排排的 dotnet.exe,一脸懵逼啊！(可能除了多项目还会有其他原因出现更多个，比如 redis 连接没关闭，https 的原因~)</p><figure><img src="'+i+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>如上图，完全不知道要附加到那个进程，最开始没找到解决方案(懒)，直接就给全选了，后面找到解决方案才开始愉快的玩耍</p><h2 id="解决方案" tabindex="-1"><a class="header-anchor" href="#解决方案"><span>解决方案</span></a></h2><p>新建 <code>run.bat</code>，写入以下命令，每次运行时执行脚本运行即可</p><h3 id="run-bat-脚本" tabindex="-1"><a class="header-anchor" href="#run-bat-脚本"><span>run.bat 脚本</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>taskkill /F /T /FI &quot;WINDOWTITLE eq Dotnet.Api1&quot; /IM dotnet.exe</span></span>
<span class="line"><span></span></span>
<span class="line"><span>start &quot;Dotnet.Api1&quot; dotnet run</span></span>
<span class="line"><span></span></span>
<span class="line"><span>exit</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="脚本说明" tabindex="-1"><a class="header-anchor" href="#脚本说明"><span>脚本说明</span></a></h4><ol><li><p>关闭名字为“Dotnet.Api1”的 dotnet.exe 进程，新</p></li><li><p>启动一个标题为“Dotnet.Api1”的窗口运行 <code>dotnet run</code> 或者 <code>dotnet watch run</code></p></li><li><p>退出 run.bat 的 cmd 进程</p></li></ol><h3 id="publish-run-bat" tabindex="-1"><a class="header-anchor" href="#publish-run-bat"><span>publish-run.bat</span></a></h3><p>因为前后端是并行开发的，数据对接的过程中，如果改动一下就编译接口就不太合适，就需要发布运行，可使用下面的脚本快速发布</p><p>发布脚本如下，删除进程，重新发布，再次运行即可</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>taskkill /F /T /FI &quot;WINDOWTITLE eq Dotnet.Web.Publish&quot; /IM dotnet.exe</span></span>
<span class="line"><span></span></span>
<span class="line"><span>dotnet publish -c Release</span></span>
<span class="line"><span></span></span>
<span class="line"><span>start &quot;Dotnet.Web.Publish&quot; /D &quot;./bin/Release/netcoreapp2.2/publish/&quot; dotnet Dotnet.Api.dll --urls http://*:2333</span></span>
<span class="line"><span></span></span>
<span class="line"><span>exit</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="脚本执行" tabindex="-1"><a class="header-anchor" href="#脚本执行"><span>脚本执行</span></a></h3><p>在 vs2017 中如果想要快速的执行脚本，可在【工具-扩展和更新】中安装扩展<a href="https://github.com/madskristensen/OpenCommandLine" target="_blank" rel="noopener noreferrer">OpenCommandLine</a></p><figure><img src="`+p+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>安装完成后即可方便的执行脚本了。</p><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h2><p>边写边查资料的过程中，一步步查找资料最后翻到了 GitHub 的 <a href="https://github.com/dotnet/core-setup/issues/2007" target="_blank" rel="noopener noreferrer">issues#2007</a></p><p>发现早就有人提出问题，也给出了解决方案 <code>start &quot;My App&quot; dotnet MyApp.dll</code>~</p><p>本文对解决方案进行了补充完善，使其得以更加方便快捷使用。</p>',26)]))}const u=n(r,[["render",l],["__file","dotnet_additional_process_debugging_bug.html.vue"]]),h=JSON.parse('{"path":"/posts/dotnetcore/dotnet_additional_process_debugging_bug.html","title":"三行脚本让 asp.net core 附加进程调试不再头痛","lang":"zh-CN","frontmatter":{"title":"三行脚本让 asp.net core 附加进程调试不再头痛","date":"2019-08-28T00:50:00.000Z","category":["DotNetCore"],"tag":[".net core"],"description":"在将项目升级到 asp.net core 2.2 后,很少使用 IIS Express 运行项目了，基本都是控制台运行或者写个脚本批量启动要运行的接口(多个输出项目)，一直以为是我机器的 bug 关于 vs 的 asp.net core 进程调试的这个问题困扰了我好一段时间未曾解决，得空整理记录一下。 问题描述 一顿操作猛如虎运行 dotnet run...","head":[["meta",{"property":"og:url","content":"https://www.yimo.link/posts/dotnetcore/dotnet_additional_process_debugging_bug.html"}],["meta",{"property":"og:site_name","content":"易墨网"}],["meta",{"property":"og:title","content":"三行脚本让 asp.net core 附加进程调试不再头痛"}],["meta",{"property":"og:description","content":"在将项目升级到 asp.net core 2.2 后,很少使用 IIS Express 运行项目了，基本都是控制台运行或者写个脚本批量启动要运行的接口(多个输出项目)，一直以为是我机器的 bug 关于 vs 的 asp.net core 进程调试的这个问题困扰了我好一段时间未曾解决，得空整理记录一下。 问题描述 一顿操作猛如虎运行 dotnet run..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-28T11:15:42.000Z"}],["meta",{"property":"article:tag","content":".net core"}],["meta",{"property":"article:published_time","content":"2019-08-28T00:50:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-10-28T11:15:42.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"三行脚本让 asp.net core 附加进程调试不再头痛\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-08-28T00:50:00.000Z\\",\\"dateModified\\":\\"2024-10-28T11:15:42.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"易墨\\",\\"url\\":\\"https://www.yimo.link\\"}]}"]]},"headers":[{"level":2,"title":"问题描述","slug":"问题描述","link":"#问题描述","children":[]},{"level":2,"title":"解决方案","slug":"解决方案","link":"#解决方案","children":[{"level":3,"title":"run.bat 脚本","slug":"run-bat-脚本","link":"#run-bat-脚本","children":[{"level":4,"title":"脚本说明","slug":"脚本说明","link":"#脚本说明","children":[]}]},{"level":3,"title":"publish-run.bat","slug":"publish-run-bat","link":"#publish-run-bat","children":[]},{"level":3,"title":"脚本执行","slug":"脚本执行","link":"#脚本执行","children":[]}]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1730114142000,"updatedTime":1730114142000,"contributors":[{"name":"yimo","email":"yimo@wikiglobal.com","commits":1}]},"readingTime":{"minutes":2.04,"words":612},"filePathRelative":"posts/dotnetcore/dotnet_additional_process_debugging_bug.md","localizedDate":"2019年8月28日","excerpt":"<p>在将项目升级到 asp.net core 2.2 后,很少使用 IIS Express 运行项目了，基本都是控制台运行或者写个脚本批量启动要运行的接口(多个输出项目)，一直以为是我机器的 bug</p>\\n<p>关于 vs 的 asp.net core 进程调试的这个问题困扰了我好一段时间未曾解决，得空整理记录一下。</p>\\n<h2>问题描述</h2>\\n<p>一顿操作猛如虎运行 <code>dotnet run</code> 很多个应用程序(前后端分离，多个项目运行的场景)</p>\\n<p>然后打开项目选择【调试-附加到进程】(<code>.net framework 要附加到 w3wp.exe,.net core 要附加到 dotnet.exe</code>)</p>","autoDesc":true}');export{u as comp,h as data};
