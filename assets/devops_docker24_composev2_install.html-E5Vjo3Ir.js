import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,e as n,o as l}from"./app-CzakNbIb.js";const a="/assets/662652-20231002113916035-1426407005-CsNIc6nw.png",o={};function r(c,e){return l(),s("div",null,e[0]||(e[0]=[n(`<h4 id="前言" tabindex="-1"><a class="header-anchor" href="#前言"><span>前言</span></a></h4><ul><li>Docker 是一款流行的开源容器化平台,使用 Docker 可以有效地隔离应用程序和系统环境，使得应用程序在不同的环境中具有相同的行为</li><li>Docker Compose 是一个用于定义和管理多个 Docker 容器的工具</li><li>Docker 官方文档：<a href="https://docs.docker.com/" target="_blank" rel="noopener noreferrer">文档地址</a></li><li>Docker Hub: <a href="https://hub.docker.com/" target="_blank" rel="noopener noreferrer">容器镜像库和社区</a></li><li>作者：<a href="https://github.com/yimogit" target="_blank" rel="noopener noreferrer">易墨</a></li><li>发布时间：2023.10.02</li></ul><h4 id="软件包源配置" tabindex="-1"><a class="header-anchor" href="#软件包源配置"><span>软件包源配置</span></a></h4><p>跟着文档第一句就报错了,需要配置包源下</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>[root@devops01 ~]# sudo yum install -y yum-utils</span></span>
<span class="line"><span>CentOS Linux 8 - AppStream                             77  B/s |  38  B     00:00</span></span>
<span class="line"><span>Error: Failed to download metadata for repo &#39;appstream&#39;: Cannot prepare internal mirrorlist: No URLs in mirrorlist</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>配置包源</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>curl -o /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-vault-8.5.2111.repo</span></span>
<span class="line"><span>rm /etc/yum.repos.d/CentOS-Linux-AppStream.repo -f</span></span>
<span class="line"><span>rm /etc/yum.repos.d/CentOS-Linux-BaseOS.repo -f</span></span>
<span class="line"><span>dnf clean all</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="docker-安装" tabindex="-1"><a class="header-anchor" href="#docker-安装"><span>Docker 安装</span></a></h4><ul><li><p>官方文档：<a href="https://docs.docker.com/engine/install/centos/" target="_blank" rel="noopener noreferrer">Install Docker Engine on CentOS</a></p></li><li><p>安装时的版本</p><ul><li>查看版本列表：<code>yum list docker-ce --showduplicates | sort -r</code></li><li>当前 docker-ce 版本：3:24.0.0-1.el8</li><li>当前 docker-ce-cli：1:24.0.6-1.el8</li></ul></li><li><p>卸载旧版本,新机器跳过即可</p><ul><li><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>sudo yum remove docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin docker-ce-rootless-extras</span></span>
<span class="line"><span>sudo rm -rf /var/lib/docker</span></span>
<span class="line"><span>sudo rm -rf /var/lib/containerd</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p>安装</p><ul><li><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>sudo yum install -y yum-utils device-mapper-persistent-data lvm2</span></span>
<span class="line"><span>sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo</span></span>
<span class="line"><span>sudo yum install -y docker-ce-3:24.0.0-1.el8 docker-ce-cli-1:24.0.6-1.el8 containerd.io docker-buildx-plugin docker-compose-plugin</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p>启动</p><ul><li>docker未启动将会报错：<code>Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?</code></li><li><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>sudo systemctl start docker</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul></li><li><p>安装完毕</p><ul><li><img src="`+a+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></li></ul></li></ul><h4 id="docker-镜像加速器配置" tabindex="-1"><a class="header-anchor" href="#docker-镜像加速器配置"><span>Docker 镜像加速器配置</span></a></h4><p>docker镜像默认是从hub.docker.com拉取镜像，国内访问太慢了，可以配置国内的镜像源</p><ol><li>阿里云私有加速器 登录后获取 <a href="https://cr.console.aliyun.com/cn-hongkong/instances/mirrors" target="_blank" rel="noopener noreferrer">配置镜像加速器</a></li></ol><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>sudo mkdir -p /etc/docker</span></span>
<span class="line"><span>sudo tee /etc/docker/daemon.json &lt;&lt;-&#39;EOF&#39;</span></span>
<span class="line"><span>{</span></span>
<span class="line"><span>  &quot;registry-mirrors&quot;: [&quot;https://dist7hw1.mirror.aliyuncs.com&quot;]</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>EOF</span></span>
<span class="line"><span>sudo systemctl daemon-reload</span></span>
<span class="line"><span>sudo systemctl restart docker</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li><p>百度及网易公共加速器</p><ol><li><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>cat &gt; /etc/docker/daemon.json &lt;&lt; EOF</span></span>
<span class="line"><span>{</span></span>
<span class="line"><span>  &quot;registry-mirrors&quot;: [</span></span>
<span class="line"><span>    &quot;https://hub-mirror.c.163.com&quot;,</span></span>
<span class="line"><span>    &quot;https://mirror.baidubce.com&quot;</span></span>
<span class="line"><span>  ] </span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>EOF</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol></li><li><p>其他可以通过 <a href="https://github.com/docker-practice/docker-registry-cn-mirror-test" target="_blank" rel="noopener noreferrer">docker-registry-cn-mirror-test</a> 项目查看是否可以使用</p></li></ol><h4 id="docker-常用命令一览" tabindex="-1"><a class="header-anchor" href="#docker-常用命令一览"><span>Docker 常用命令一览</span></a></h4><ol><li><p>镜像相关命令：</p><ol><li><code>docker images</code>：列出本地的镜像列表。</li><li><code>docker pull &lt;image_name&gt;</code>：从 Docker Hub 下载指定名称的镜像。</li><li><code>docker push &lt;image_name&gt;</code>：将本地的镜像推送到 Docker Hub 或私有镜像仓库中。</li><li><code>docker rmi &lt;image_name&gt;</code>：删除指定的镜像。</li></ol></li><li><p>容器相关命令：</p><ol><li><code>docker ps</code>：列出运行中的容器列表。</li><li><code>docker ps -a</code>：列出所有的容器列表，包括已停止的容器。</li><li><code>docker run &lt;image_name&gt;</code>：创建并启动一个新的容器。</li><li><code>docker start &lt;container_id&gt;</code>：启动已停止的容器。</li><li><code>docker stop &lt;container_id&gt;</code>：停止运行中的容器。</li><li><code>docker restart &lt;container_id&gt;</code>：重启容器。</li><li><code>docker rm &lt;container_id&gt;</code>：删除指定的容器。</li><li><code>docker exec -it &lt;container_id&gt; &lt;command&gt;</code>：在运行中的容器中执行命令。</li><li><code>docker logs &lt;container_id&gt;</code>：查看容器的日志输出。</li></ol></li><li><p>网络相关命令：</p><ol><li><code>docker network ls</code>：列出 Docker 网络列表。</li><li><code>docker network create &lt;network_name&gt;</code>：创建一个新的网络。</li><li><code>docker network connect &lt;network_name&gt; &lt;container_id&gt;</code>：将容器连接到指定的网络。</li><li><code>docker network disconnect &lt;network_name&gt; &lt;container_id&gt;</code>：断开容器与指定网络的连接。</li></ol></li><li><p>其他常用命令：</p><ol><li><code>docker version</code>：查看 Docker 版本信息。</li><li><code>docker info</code>：查看 Docker 系统信息。</li><li><code>docker search &lt;term&gt;</code>：在 Docker Hub 上搜索镜像。</li><li><code>docker pull &lt;image_name&gt;:&lt;tag&gt;</code>：下载指定标签的镜像。</li><li><code>docker tag &lt;source_image_name&gt; &lt;target_image_name&gt;</code>：给镜像打标签。</li><li><code>docker login</code>：登录到 Docker Hub 或私有镜像仓库。</li><li><code>docker logout</code>：退出当前登录的 Docker Hub 或私有镜像仓库。</li></ol></li></ol><h4 id="docker-compose-v2-安装" tabindex="-1"><a class="header-anchor" href="#docker-compose-v2-安装"><span>Docker Compose V2 安装</span></a></h4><ul><li><p>官方文档：<a href="https://docs.docker.com/compose/install/linux/#install-using-the-repository" target="_blank" rel="noopener noreferrer">Install using the repository</a></p></li><li><p>当前版本：v2.21.0</p><ul><li><blockquote><p>使用的语法变了，用 docker compose 来运行命令，去掉了 - ,详情可以看<a href="https://docs.docker.com/compose/migrate/" target="_blank" rel="noopener noreferrer">迁移指南</a></p></blockquote></li></ul></li><li><p>安装</p><ul><li><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>sudo yum update</span></span>
<span class="line"><span>sudo yum install docker-compose-plugin -y</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p>使用</p><ul><li><code>docker compose xxxx</code>同之前的docker-compose</li><li><code>docker-compose scale</code> 需要修改<code>docker compose up --scale</code></li><li><code>docker-compose config</code> 命令用于验证和查看 Docker Compose 文件的配置</li></ul></li><li><p>使用示例：<a href="https://docs.docker.com/compose/gettingstarted/" target="_blank" rel="noopener noreferrer">官方示例</a></p></li><li><p>旧版本1.x 的安装，安装后使用 docker-compose</p><ul><li><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span># 下载docker-compose,服务器下不下来可以本地下然后传到服务器</span></span>
<span class="line"><span>sudo curl -L &quot;https://github.com/docker/compose/releases/download/1.27.4/docker-compose-$(uname -s)-$(uname -m)&quot; -o /usr/local/bin/docker-compose</span></span>
<span class="line"><span># 添加可执行权限</span></span>
<span class="line"><span>sudo chmod +x /usr/local/bin/docker-compose</span></span>
<span class="line"><span># 输出版本</span></span>
<span class="line"><span>docker-compose --version</span></span>
<span class="line"><span># 输出：docker-compose version 1.27.4, build xxx</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li></ul><h4 id="使用实践" tabindex="-1"><a class="header-anchor" href="#使用实践"><span>使用实践</span></a></h4><ul><li>创建容器网络：<code>docker network create devopsnetwork</code></li></ul><p>一般来讲一个项目的服务都应该在一个网络中，所以在创建容器前都需要先创建容器网络</p><ul><li><p>指定容器网络：</p><ul><li>运行 docker 时 <code>docker run --network=devopsnetwork xxxximages</code></li><li>创建 compose.yml 中指定网络, 运行：<code>docker compose up</code></li><li>查看容器网络信息：<code>docker inspect e54c | grep Networks -A 20</code></li><li><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>services:</span></span>
<span class="line"><span>  web:</span></span>
<span class="line"><span>    image: nginx</span></span>
<span class="line"><span>    ports:</span></span>
<span class="line"><span>      - &quot;8080:80&quot;</span></span>
<span class="line"><span>    networks:</span></span>
<span class="line"><span>      - devopsnetwork</span></span>
<span class="line"><span>networks:</span></span>
<span class="line"><span>  devopsnetwork:</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li></ul><h4 id="后语" tabindex="-1"><a class="header-anchor" href="#后语"><span>后语</span></a></h4><ul><li>安装&amp;记录耗时：6小时</li><li>参考：<a href="https://www.cnblogs.com/morang/p/docker-compose-yml-share.html" target="_blank" rel="noopener noreferrer">linux中使用docker-compose部署软件配置分享</a></li></ul>`,24)]))}const p=i(o,[["render",r],["__file","devops_docker24_composev2_install.html.vue"]]),k=JSON.parse('{"path":"/posts/docker/devops_docker24_composev2_install.html","title":"Docker V24 及 Docker Compose V2 的安装及使用","lang":"zh-CN","frontmatter":{"title":"Docker V24 及 Docker Compose V2 的安装及使用","date":"2023-10-02T11:46:00.000Z","category":["Docker"],"tag":["devops","docker","docker-compose"],"description":"前言 Docker 是一款流行的开源容器化平台,使用 Docker 可以有效地隔离应用程序和系统环境，使得应用程序在不同的环境中具有相同的行为 Docker Compose 是一个用于定义和管理多个 Docker 容器的工具 Docker 官方文档：文档地址 Docker Hub: 容器镜像库和社区 作者：易墨 发布时间：2023.10.02 软件包源...","head":[["meta",{"property":"og:url","content":"https://www.yimo.link/posts/docker/devops_docker24_composev2_install.html"}],["meta",{"property":"og:site_name","content":"易墨网"}],["meta",{"property":"og:title","content":"Docker V24 及 Docker Compose V2 的安装及使用"}],["meta",{"property":"og:description","content":"前言 Docker 是一款流行的开源容器化平台,使用 Docker 可以有效地隔离应用程序和系统环境，使得应用程序在不同的环境中具有相同的行为 Docker Compose 是一个用于定义和管理多个 Docker 容器的工具 Docker 官方文档：文档地址 Docker Hub: 容器镜像库和社区 作者：易墨 发布时间：2023.10.02 软件包源..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-28T11:15:42.000Z"}],["meta",{"property":"article:tag","content":"devops"}],["meta",{"property":"article:tag","content":"docker"}],["meta",{"property":"article:tag","content":"docker-compose"}],["meta",{"property":"article:published_time","content":"2023-10-02T11:46:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-10-28T11:15:42.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Docker V24 及 Docker Compose V2 的安装及使用\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-10-02T11:46:00.000Z\\",\\"dateModified\\":\\"2024-10-28T11:15:42.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"易墨\\",\\"url\\":\\"https://www.yimo.link\\"}]}"]]},"headers":[{"level":4,"title":"前言","slug":"前言","link":"#前言","children":[]},{"level":4,"title":"软件包源配置","slug":"软件包源配置","link":"#软件包源配置","children":[]},{"level":4,"title":"Docker 安装","slug":"docker-安装","link":"#docker-安装","children":[]},{"level":4,"title":"Docker 镜像加速器配置","slug":"docker-镜像加速器配置","link":"#docker-镜像加速器配置","children":[]},{"level":4,"title":"Docker 常用命令一览","slug":"docker-常用命令一览","link":"#docker-常用命令一览","children":[]},{"level":4,"title":"Docker Compose V2 安装","slug":"docker-compose-v2-安装","link":"#docker-compose-v2-安装","children":[]},{"level":4,"title":"使用实践","slug":"使用实践","link":"#使用实践","children":[]},{"level":4,"title":"后语","slug":"后语","link":"#后语","children":[]}],"git":{"createdTime":1730114142000,"updatedTime":1730114142000,"contributors":[{"name":"yimo","email":"yimo@wikiglobal.com","commits":1}]},"readingTime":{"minutes":4.07,"words":1221},"filePathRelative":"posts/docker/devops_docker24_composev2_install.md","localizedDate":"2023年10月2日","excerpt":"<h4>前言</h4>\\n<ul>\\n<li>Docker 是一款流行的开源容器化平台,使用 Docker 可以有效地隔离应用程序和系统环境，使得应用程序在不同的环境中具有相同的行为</li>\\n<li>Docker Compose 是一个用于定义和管理多个 Docker 容器的工具</li>\\n<li>Docker 官方文档：<a href=\\"https://docs.docker.com/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">文档地址</a></li>\\n<li>Docker Hub: <a href=\\"https://hub.docker.com/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">容器镜像库和社区</a></li>\\n<li>作者：<a href=\\"https://github.com/yimogit\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">易墨</a></li>\\n<li>发布时间：2023.10.02</li>\\n</ul>","autoDesc":true}');export{p as comp,k as data};
