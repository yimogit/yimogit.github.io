{"pages":[{"title":"我没有啥想说的，就看你想说啥~","permalink":"http://yimo.link/about/index.html","text":"一步一个脚印的走下去。"},{"title":"每日一图","permalink":"http://yimo.link/daypics/index.html","text":""}],"posts":[{"title":"weexpack打包weex项目运行/打包记录","permalink":"http://yimo.link/2017/05/14/06-weex-build-apk/","text":"构建weex项目 安装weex-toolkit cnpm install -g weex-toolkit 初始化一个项目只需新建文件夹并在目录下执行 weex init 即可 安装依赖：cnpm install 编译项目：npm run dev 启动服务器：npm run serve //可以修改package.json的端口号来改变监听端口 可以执行的命令一览 使用weexpack打包weex项目 各种百度 ‘weex打包’ ‘如何打包weex apk’ ‘weex 发布 apk’ 未果最后在这里看到了这玩意T_T weexpack 介绍 更多详情见Githubweexpack 是 weex 新一代的工程开发套件，是基于weex快速搭建应用原型的利器。它能够帮助开发者通过命令行创建weex工程，添加相应平台的weex app模版，并基于模版从本地、GitHub 或者 weex 应用市场安装插件，快速打包 weex 应用并安装到手机运行，对于具有分享精神的开发者而言还能够创建weex插件模版并发布插件到weex应用市场。 开始我的安装 安装Android需要的环境：android环境折腾可参考windows下react-native环境搭建 安装weexpack：项目地址 cnpm install -g weexpack 初始化一个weexpack程序： weexpack init dsb-weexpack 还原依赖： cnpm install 如果没有安装android SDK的好需要去安装sdk，安装好了就添加平台到项目：weexpack platform add android 修改gradle-wrapper.properties文件gradle下载地址distributionUrl值为：distributionUrl=file:///F:/gradle-2.14.1-all.zip 打包编译： weexpack build android 苦等ing…… 两天过去了，于3月1日清晨成功下载完毕，且没有挂vpn~生成文件如图所示 在夜神模拟器运行：首先使用adb连接到夜神模拟器adb connect 127.0.0.1:62001,再执行weexpack run android即可在模拟器中运行 参考 https://github.com/weexteam/weex-packhttps://github.com/vczero/weex-learninghttps://github.com/apache/incubator-weex"},{"title":"react学习记录","permalink":"http://yimo.link/2017/05/14/07-react-study-record/","text":"react学习记录2017.01.08 在iOS上使用http链接的图片地址可能不会显示，参见这篇说明修改。 需要的组件都要在顶部引用。 不能直接在组件外面写样式，需要显示传递，样式名按骆驼命名法书写顺序声明和使用style属性，以借鉴CSS中的“层叠”做法（即后声明的属性会覆盖先声明的同名属性） Flexbox布局的说明 http://reactnative.cn/docs/0.40/layout-props.html"},{"title":"从零开始在win10系统搭建react-native开发环境","permalink":"http://yimo.link/2017/05/14/05-react-native-java-build/","text":"win10 react-native环境搭建 首先不得不先吐槽一下自己，一个坑总是踩很多次，且乐此不疲。咋办? 写博客记录记录呗。 零、记录的点 Java环境的下载与配置 Android环境的下载与配置 Node环境的下载与配置 创建第一个react-native应用 最终能够达到的目的：在手机上能够运行第一个React-Native应用~ 以备后用，已将安装包上传到了网盘 密码：bqbc 一、Java环境的下载与配置记录下Java里面的三个术语理解 JDK是什么？ 答曰：JDK乃【Java开发工具包】 (Java Development Kit ) 的缩写,是一种用于构建在 Java 平台上发布的应用程序、applet 和组件的开发环境 JRE是什么？ 答曰：JRE乃【Java运行环境】(Java Runtime Environment)的缩写,其包含JVM标准实现及Java核心类库 JVM是什么？ 答曰：JVM是【Java虚拟机】(Java Virtual Machine)的缩写 下载安装配置JDK 到官网 或者android-studio下载JDK 安装JDK，我安装到的D:\\Software\\JavaJdk 必须得配置环境变量滴 ①java_home:D:\\Software\\JavaJdk ②classpath(.;开头):.;%java_home%\\lib\\dt.jar;%java_home%\\lib\\tools.jar ③追加path变量的值:;%java_home%\\bin 二、Android环境的下载与配置下载Android SDK 到android-studio下载SDK。运行installer_r24.4.1-windows.exe安装、或zip解压出来的SDK Manager.exe 然后我安装了以下这些包(我的react-native版本是0.40.0) SDKManager使用说明： 被镜像坑了，所以不推荐镜像，直接修改hosts文件就成—&gt;去找最新的hosts镜像地址—&gt;去找最新的镜像地址 镜像使用说明 使用镜像安装不了23.0.1的同学趁早换hosts的方式或者挂vpn。 科学上网还是得备个vpn呐~~~ SDK包下好了，接下来就配置系统环境变量吧 ①ANDROID_HOME:D:\\Software\\JavaAndroidSdk②追加path变量的值:%ANDROID_HOME%\\platforms\\;%ANDROID_HOME%\\platform-tools\\;%ANDROID_HOME%\\tools\\;%ANDROID_HOME%;我的Path图 测试Java环境，Android环境 失败自行回退检查~~ 三、安装node.jsnode官网历史版本修改下载链接的值就能下载历史版本了如：我使用的是版本是V6.2.0然后就是node的一些设置了npm config set prefix &quot;D:\\Program Files\\nodejs\\node_global&quot; //设置全局包目录npm config set cache &quot;D:\\Program Files\\nodejs\\node_cache&quot; //设置缓存目录npm config set registry https://registry.npm.taobao.org&quot; //设置淘宝镜像 之前有安装过node，卸载旧版重新安装到之前的目录就==升级了npm升级命令npm update 四、创建第一个在手机上运行的react-native应用 启动CMD定位到开发目录：例F:\\ReactDemo 全局安装npm install -g react-native-cli 初始化一个项目：react-native init yimoapp cd yimoapp 运行packager：react-native start 如果你碰到了ERROR Watcher took too long to load的报错，请尝试将这个文件中的MAX_WAIT_TIME值改得更大一些 (文件在node_modules/react-native/目录下)。成功运行这时候可以用浏览器访问http//localhost:8081/index.android.bundle?platform=android查看服务端是否已成功启动 真机运行,使用usb连接手机，开启USB调试权限 查看连接的设备：adb devices react-native run-android构建工程并自动安装到手机 不要慌，先做点准备工作。手动下载gradle-2.4-all.zip到本地修改 F:\\ReactDemo\\yimoapp\\android\\gradle\\wrapper\\gradle-wrapper.properties文件的distributionUrl配置为[本地的gradle-2.4-all.zip路径]以使其可离线下载 包安装得差不多的时候会提示你安装应用 可能会有一个这样的错误，奇怪的是第一次安装有,这一次安装就没有遇到了。 将android/build.gradle文件中的 classpath ‘com.android.tools.build:gradle:1.3.1’ 改为 classpath ‘com.android.tools.build:gradle:1.2.3’ 。猜测是插件包不兼容导致。 解决白屏问题找到并开启应用的悬浮窗权限,以mui8.1为例，设置-&gt;授权管理-&gt;应用权限管理-&gt;yimoapp-&gt;勾选显示浮窗权限然后再次打开yimoapp。我去。这次来个大红色的错误了 咋办。摇一摇说不定有奇迹 在回退刷新前。我去改了改index.android.js，好了回到页面摇一摇然后刷新 总结与收获总结是很有必要的。有很多问题是在Java和Android环境没有弄好的情况下会出现的。参考文章： http://www.tuicool.com/articles/26byiuZ 这里面的错我也都遇到过~~ http://www.cnblogs.com/suxun/p/5220564.html 有配置模拟器的 一天就这样结束，一天就这样开始。"},{"title":"使用node自动生成html并调用cmd命令提交代码到仓库","permalink":"http://yimo.link/2017/05/14/04-node-cmd-git/","text":"生成html提交到git仓库 基于目前的express博客,写了一点代码,通过request模块来请求站点，将html保存到coding-pages目录，复制静态文件夹到coding-pages,最后使用node的child_process模块执行cmd命令提交到仓库~~ 1. 发送http请求 var request = require(&apos;request&apos;); var options = { url: url, encoding: null, headers: { &apos;User-Agent&apos;: &apos;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.65 Safari/537.36&apos; } }; request(options, function (error, response, body) { //请求的回调，编码问题使用iconv模块解决 //var iconv = require(&apos;iconv-lite&apos;); //var html=iconv.decode(body,&apos;utf-8&apos;); //若是需要解析html则可以使用cheerio模块 //var cheerio=require(&apos;cheerio&apos;).load(html,{decodeEntities: false}); //然后就可以像jqueryy一样去解析html了。 //cheerio(&apos;选择器&apos;); }); 然后就可以愉快的抓数据了。之前也写过基于request，iconv，cheerio,schedule(定时调度模块)写了一个抓取的框架 2. 保存html到目录 得到url的路径部分(除去域名)，即：/index.html,/msg.html…现在只需要根据这个路径和获取到的html保存即可此时有了保存的路径和内容，保存还不小事一桩么。如下。 function writeText(pathName,content){ var dir= pathHelper.dirname(pathName);//获取到路径中的目录 fs.exists(dir, function (exists) {//如果不存在则创建目录 if(exists==false){ fs.mkdir(dir); } }); fs.writeFile(pathName, content, function (err) {//写入内容 if (err){ console.log(pathName+&apos;生成失败&apos;); } }); } 3. 使用node执行.bat文件复制静态文件到coding-pages目录 复制目录可以使用async模块实现的目录操作调用copyDir方法即可。也可以使用child_process模块来调用cmd命令实现 注：直接使用require(‘child_process’).exec 执行xcopy并不能复制目录，需要一种折中的方式如下： var exec = require(&apos;child_process&apos;).exec; var execbat = __dirname + &apos;\\\\exec.bat&apos;; //1. 创建复制脚本 commonHelper.writeText(execbat, &apos;xcopy F:\\\\CodingRepos\\\\yimocoding\\\\coding-pages\\\\tag F:\\\\CodingRepos\\\\yimocoding\\\\coding-pages\\\\tag3 /s /e /Q /Y /I&apos;); //2.执行批处理复制目录 exec(execbat, function (err, stdout, stderr) { if (err) { console.log(err); } else{ console.log(&apos;复制成功&apos;); } }); //3.删除批处理文件 exec(&apos;del &apos; + execbat, function (err, stdout, stderr) { if (err) { console.log(err); }else{ console.log(&apos;删除脚本成功&apos;); } }) 4. 啥？怎么提交到git运行环境安装好。能从cmd命令提交(配置环境变量)然后，看代码呗~~ var cmds = [ &apos;git add *&apos;, &apos;git commit -m &quot;提交。。。&quot;&apos;, &apos;git push&apos; ] cmds.forEach(function (cmd, i) { setTimeout(function () { console.log(cmd); exec(cmd, function (err, stdout, stderr) { if (err) { console.log(err); } }); }, i * 1000); }) 写文章还是挺累的。但是把用到的东西记录下来是有必要的。文笔欠佳，然记录一二也是挺好滴。"},{"title":"2017，我迈出了第一步","permalink":"http://yimo.link/2017/05/14/03-yimo-blogs-v3/","text":"博客满血复活了，啦啦啦 不知不觉天就亮了，2017年的第一步也随着朝霞的升起而迈出。http://www.yimo.link/ 我的博客又活过来了;第一版是在2015,第二版是在2016，第三版即这一版在今天2017年1月1日;每一个版本都收获了许多，成长了许多，让自己知道幸苦是没有白费的;从第一版的后台使用angularjs+webapi的快速开发，到第二版的asp.net mvc的正确使用姿势，再到第三版的node-express-jshtml。踩了无数的坑，熬了无数的夜，做出东西了，那无与伦比的成就感。哈哈哈哈哈哈 只有不断的尝试，才会有所获，有所得。 回首2016，我还做了这些玩意 一、 尝试着搭建了一个asp.net mvc的框架：YimoFramework源码二、 C#写的一个自动签到的服务：AutomaticSignService源码三、 node写的一个抓数据的程序：YFKDataGrab源码四、 用vue2.0+mui3.3写了一个导航的App：vue-mui-app源码 http://app.yimo.link/五、 用vue2.0+layui封装了一些组件，后面做博客的后台管理：vue-layui源码 http://vue-layui.yimo.link/#/admin六、node-express+jshtml写的博客站点：yimocoding源码 http://www.yimo.link 如图图所示，2016结束了，2017，迎接新的改变吧。 等等，还没完呢。踩的坑还没有记录呢 问：jshtml文件没有语法高亮，看着好难受怎么办 答： vscode是可以配置文件管理的,文件-》首选项-》用户设置-》设置files.associations即可 问：写node的使用，node_modules如何不让他提交到git，不包含到工作区？ 答: 1问配置.gitignore文件，添加一行node_modules/即可;vscode可以设置files.exclude排除文件/夹 问：nginx到底要怎么配置反向代理,又如何再windows服务器上使用nginx后不影响存在的iis站点（公用80） 答：访问www.yimo.link会经由nginx转发到代理地址上，如果服务器使用iis就将iis中的站点重新配置其他端口，然后一个站点配置一个server即可 server { listen 80; server_name www.yimo.link;//解析的域名 location / { proxy_pass http://127.0.0.1:2333; //代理的地址/域名+端口的形式也可以 } over，发布，睡觉。"},{"title":"asp.net mvc项目自定义区域","permalink":"http://yimo.link/2017/05/14/02-mvc-custom-areas/","text":"前言 直接上干货就是，就不废话了。使用场景：分离模块，多站点等~~ 一、分离模块自定义视图引擎，设置视图路径格式项目结构图 1.Code: 在Global.asax Application_Start方法中添加自定义的视图引擎 using System.Collections.Generic; using System.Web.Mvc; namespace MvcProjectMain.AreasViewEngine { /// &lt;summary&gt; /// 自定义视图引擎 /// &lt;/summary&gt; /// &lt;remarks&gt; /// ViewEngines.Engines.Add(new MvcProjectMain.AreasViewEngine.ThemableRazorViewEngine()); /// &lt;/remarks&gt; public class ThemableRazorViewEngine : VirtualPathProviderViewEngine { //所有区域分离到Modules文件夹,{2}为区域名 public ThemableRazorViewEngine() { ViewEngines.Engines.Clear(); AreaViewLocationFormats = new[] { &quot;~/Modules/{2}/Views/{1}/{0}.cshtml&quot;, &quot;~/Modules/{2}/Views/Shared/{0}.cshtml&quot;, }; AreaMasterLocationFormats = new[] { &quot;~/Modules/{2}/Views/{1}/{0}.cshtml&quot;, &quot;~/Modules/{2}/Views/Shared/{0}.cshtml&quot;, }; AreaPartialViewLocationFormats = new[] { &quot;~/Modules/{2}/Views/{1}/{0}.cshtml&quot;, &quot;~/Modules/{2}/Views/Shared/{0}.cshtml&quot;, }; ViewLocationFormats = new[] { &quot;~/Views/{1}/{0}.cshtml&quot;, &quot;~/Views/Shared/{0}.cshtml&quot;, }; MasterLocationFormats = new[] { &quot;~/Views/{1}/{0}.cshtml&quot;, &quot;~/Views/Shared/{0}.cshtml&quot;, }; PartialViewLocationFormats = new[] { &quot;~/Views/{1}/{0}.cshtml&quot;, &quot;~/Views/Shared/{0}.cshtml&quot;, }; FileExtensions = new[] { &quot;cshtml&quot; }; } protected override IView CreatePartialView(ControllerContext controllerContext, string partialPath) { string layoutPath = null; var runViewStartPages = false; IEnumerable&lt;string&gt; fileExtensions = base.FileExtensions; return new RazorView(controllerContext, partialPath, layoutPath, runViewStartPages, fileExtensions); } protected override IView CreateView(ControllerContext controllerContext, string viewPath, string masterPath) { string layoutPath = masterPath; var runViewStartPages = true; IEnumerable&lt;string&gt; fileExtensions = base.FileExtensions; return new RazorView(controllerContext, viewPath, layoutPath, runViewStartPages, fileExtensions); } } } 2.Code:在Global.asax中添加注册区域–&gt;AreaRegistration.RegisterAllAreas(); public class ThemesAreaRegistration : AreaRegistration { public override string AreaName { get { return &quot;MvcProjectThemes&quot;; } } public override void RegisterArea(AreaRegistrationContext context) { context.MapRoute( &quot;MvcProjectThemes&quot;, &quot;MvcProjectThemes/{controller}/{action}/{id}&quot;, new { controller = &quot;Home&quot;, action = &quot;Index&quot;, id = UrlParameter.Optional, }, namespaces: new string[] { &quot;MvcProjectThemes.Controllers&quot; } ); } } 3.Code:注册主项目MvcProjectMain的路由 RouteConfig.RegisterRoutes(RouteTable.Routes); namespace MvcProjectMain { public class RouteConfig { public static void RegisterRoutes(RouteCollection routes) { routes.IgnoreRoute(&quot;{resource}.axd/{*pathInfo}&quot;); routes.MapRoute( name: &quot;Default&quot;, url: &quot;{controller}/{action}/{id}&quot;, defaults: new { controller = &quot;Home&quot;, action = &quot;Index&quot;, id = UrlParameter.Optional }, namespaces: new string[] { &quot;MvcProjectMain.Controllers&quot; } ); } } } 最后主要代码就是步骤1中的ThemableRazorViewEngine.cs类。自定义查找路径，其他的都是MVC的基础知识了,不懂自行查阅资料"},{"title":"随便记录下系列 - node->express","permalink":"http://yimo.link/2017/05/14/01-node-express/","text":"随便记录下系列 - node-&gt;express 文章用啥写？→→ VsCode。代码用啥写？→→ VsCode。编辑器下载：VsCode 一、windows下安装node.js环境： 下载地址 相比以前搭过的服务端语言的环境,node环境的安装简直是业界良心即使第一次折腾了2天，第二次折腾了2小时，第三次折腾了2分钟 下载其他版本只需要替换下载链接 https://nodejs.org/dist/v6.2.0/node-v6.2.0-x64.msi 的2个版本号6.2.0为你需要的版本即可 尽量别把node安装在C盘(使用D:\\Program Files\\nodejs) 基础配置项(根据需要设置环境变量) 设置全局安装包路径： npm config set prefix &quot;D:\\Program Files\\nodejs\\node_global 设置缓存目录： npm config set cache &quot;D:\\Program Files\\nodejs\\node_cache 设置淘宝镜像源： npm install -g cnpm --registry=https://registry.npm.taobao.org PS： vue2.0用node-v4.5吧~，npm升级命令npm update 升级npm版本,若是不行则切换为32位版本的试试,再不行换个系统试试T-_-T 二、使用express 安装express 中文网 看文档！！！ 有网,有 node ,有 npm/cnpm/… 全局安装express： npm install express -g 安装express应用生成器： npm install express-generator -g 创建一个express(v4.14.0)应用： express mydemo 启动应用： npm start 自动更新修改 supervisor 运行起express应用,并做了一丁点修改后，习惯性保存后去刷新了页面，卧槽，【假装这是一张表情图】，左思右想百思不得其解~~~于是百度 “express 自动刷新“,你以为出来了么？并没有~那就换个词试试：”express 修改更新“,遂知supervisor~ 安装：npm install supervisor -g 启动express：supervisor ./bin/www 名字太长了~，改package.json-&gt;scripts-&gt;start配置啊：{&quot;start&quot;: &quot;supervisor ./bin/www&quot;} 在正确的目录使用正确的姿势执行npm start 修改模板引擎为jshtml 若要问我为什么，我只能说看着爽,即使jshtml最后一次更新在n年前~ 安装jshtml-express到项目：npm install jshtml-express --save 在app.js设置模板引擎为jsthml app.engine(&#39;jshtml&#39;, require(&#39;jshtml-express&#39;)); app.set(&#39;view engine&#39;, &#39;jshtml&#39;); 视图文件修改后缀名为.jshtml(.jshtml没高亮？把后缀改成cshtml写代码,然后修改vscode文件关联项：files.associations为{&quot;*.jshtml&quot;:&quot;cshtml&quot;}) 然后就去瞅文档吧。哈哈 路由中输出模型的时候需要用res.locals = model;输出模型，视图中使用@locals表示为模型 博客已使用express+jshtml：https://coding.net/u/yimocoding/p/yimocoding/git/tree/server/ 博客园主页：cnblogs.comCoding主页：coding.net"}]}